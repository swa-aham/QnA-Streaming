2025-06-28 14:40:20.367 [main] INFO  c.kafka.consumer.ConsumerApplication - Starting ConsumerApplication using Java 22.0.1 with PID 16312 (F:\Projects\Practice\consumer\target\classes started by SOHAM in F:\Projects\Practice\consumer)
2025-06-28 14:40:20.502 [main] DEBUG c.kafka.consumer.ConsumerApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-28 14:40:20.504 [main] INFO  c.kafka.consumer.ConsumerApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-28 14:40:23.313 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-28 14:40:23.742 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 397 ms. Found 1 JPA repository interface.
2025-06-28 14:40:25.586 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-28 14:40:25.636 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-28 14:40:25.637 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-06-28 14:40:25.870 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-28 14:40:25.870 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5161 ms
2025-06-28 14:40:26.326 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-28 14:40:29.197 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7911cc15
2025-06-28 14:40:29.202 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-28 14:40:29.333 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-28 14:40:29.548 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-06-28 14:40:29.701 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-28 14:40:32.529 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-28 14:40:33.031 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-28 14:40:33.500 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-28 14:40:42.444 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-28 14:40:42.450 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-28 14:40:48.917 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-28 14:40:56.597 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-06-28 14:40:58.139 [main] INFO  c.kafka.consumer.ConsumerApplication - Started ConsumerApplication in 40.389 seconds (process running for 42.601)
2025-06-28 14:41:02.285 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: partitions assigned: [practice5-0]
2025-06-28 14:42:00.421 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:42:00.422 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:42:00.422 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:42:02.689 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: The victor depends on the conflict.

2025-06-28 14:42:03.520 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:42:03.521 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:03.566 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:03.567 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:03.567 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:04.173 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:04.574 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:04.576 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:04.576 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Lincoln free the slaves?
"
2025-06-28 14:42:04.576 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Lincoln free the slaves?

2025-06-28 14:42:04.576 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Lincoln free the slaves?

2025-06-28 14:42:05.535 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Lincoln free the slaves?
, Answer: Lincoln's Emancipation Proclamation freed slaves in Confederate territories only.

2025-06-28 14:42:05.943 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Lincoln free the slaves?

2025-06-28 14:42:05.943 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:05.960 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:05.960 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:05.960 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:06.716 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:07.097 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:07.097 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:07.141 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs die out?
"
2025-06-28 14:42:07.143 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs die out?

2025-06-28 14:42:07.145 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs die out?

2025-06-28 14:42:07.977 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs die out?
, Answer: Yes, most non-avian dinosaurs died out.

2025-06-28 14:42:08.319 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs die out?

2025-06-28 14:42:08.319 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:08.321 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever a planet?
"
2025-06-28 14:42:08.321 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever a planet?

2025-06-28 14:42:08.321 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever a planet?

2025-06-28 14:42:09.192 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever a planet?
, Answer: Yes, Pluto was considered a planet from 1930 to 2006.

2025-06-28 14:42:09.562 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever a planet?

2025-06-28 14:42:09.565 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:09.604 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:09.604 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:09.604 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:10.356 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:10.726 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:10.726 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:10.738 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:10.740 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:10.740 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:11.553 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:11.866 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:11.869 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:11.883 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What element is represented by Au?
"
2025-06-28 14:42:11.883 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What element is represented by Au?

2025-06-28 14:42:11.883 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What element is represented by Au?

2025-06-28 14:42:12.721 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What element is represented by Au?
, Answer: Gold.

2025-06-28 14:42:13.146 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What element is represented by Au?

2025-06-28 14:42:13.146 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:13.146 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What killed the dinosaurs?
"
2025-06-28 14:42:13.146 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What killed the dinosaurs?

2025-06-28 14:42:13.146 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What killed the dinosaurs?

2025-06-28 14:42:13.998 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What killed the dinosaurs?
, Answer: Asteroid impact.

2025-06-28 14:42:14.384 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What killed the dinosaurs?

2025-06-28 14:42:14.384 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:14.397 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the asteroid kill the dinosaurs?
"
2025-06-28 14:42:14.397 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the asteroid kill the dinosaurs?

2025-06-28 14:42:14.397 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the asteroid kill the dinosaurs?

2025-06-28 14:42:15.174 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the asteroid kill the dinosaurs?
, Answer: Most evidence indicates a large asteroid impact significantly contributed to the extinction of non-avian dinosaurs.

2025-06-28 14:42:15.526 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the asteroid kill the dinosaurs?

2025-06-28 14:42:15.526 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:15.538 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:15.538 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:15.538 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:16.261 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:16.585 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:16.585 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:16.603 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs die out?
"
2025-06-28 14:42:16.603 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs die out?

2025-06-28 14:42:16.603 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs die out?

2025-06-28 14:42:17.576 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs die out?
, Answer: Yes, most dinosaurs died out.

2025-06-28 14:42:17.949 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs die out?

2025-06-28 14:42:17.965 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:17.977 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:42:17.978 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:42:17.978 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:42:18.680 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:42:19.040 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:42:19.041 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:19.053 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What year was penicillin discovered?
"
2025-06-28 14:42:19.053 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What year was penicillin discovered?

2025-06-28 14:42:19.053 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What year was penicillin discovered?

2025-06-28 14:42:19.846 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What year was penicillin discovered?
, Answer: 1928

2025-06-28 14:42:20.241 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What year was penicillin discovered?

2025-06-28 14:42:20.241 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:42:20.309 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What year did World War II end?
"
2025-06-28 14:42:20.309 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What year did World War II end?

2025-06-28 14:42:20.309 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What year did World War II end?

2025-06-28 14:42:21.010 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What year did World War II end?
, Answer: 1945

2025-06-28 14:42:21.421 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What year did World War II end?

2025-06-28 14:42:21.421 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:04.211 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto a planet?
"
2025-06-28 14:43:04.211 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto a planet?

2025-06-28 14:43:04.211 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto a planet?

2025-06-28 14:43:04.984 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto a planet?
, Answer: Pluto was considered a planet but is now classified as a dwarf planet.

2025-06-28 14:43:05.371 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto a planet?

2025-06-28 14:43:05.371 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:05.585 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who painted the Mona Lisa?
"
2025-06-28 14:43:05.586 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who painted the Mona Lisa?

2025-06-28 14:43:05.586 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who painted the Mona Lisa?

2025-06-28 14:43:06.278 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who painted the Mona Lisa?
, Answer: Leonardo da Vinci.

2025-06-28 14:43:06.694 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who painted the Mona Lisa?

2025-06-28 14:43:06.694 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:07.916 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:43:07.916 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:43:07.916 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:43:08.531 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:43:08.943 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:43:08.943 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:08.970 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did humans evolve?
"
2025-06-28 14:43:08.970 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did humans evolve?

2025-06-28 14:43:08.970 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did humans evolve?

2025-06-28 14:43:09.896 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did humans evolve?
, Answer: Yes, humans evolved.

2025-06-28 14:43:10.300 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did humans evolve?

2025-06-28 14:43:10.300 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:10.317 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall?
"
2025-06-28 14:43:10.318 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall?

2025-06-28 14:43:10.318 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall?

2025-06-28 14:43:10.973 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall?
, Answer: Yes.

2025-06-28 14:43:11.346 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall?

2025-06-28 14:43:11.346 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:11.576 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:43:11.576 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:43:11.576 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:43:12.291 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: The victor depends on the specific historical event in question.

2025-06-28 14:43:12.650 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:43:12.650 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:13.051 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:43:13.051 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:43:13.051 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:43:13.646 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:43:14.185 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:43:14.185 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:14.509 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did mammals evolve from reptiles?
"
2025-06-28 14:43:14.509 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did mammals evolve from reptiles?

2025-06-28 14:43:14.511 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did mammals evolve from reptiles?

2025-06-28 14:43:15.246 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did mammals evolve from reptiles?
, Answer: No, mammals and reptiles share a common ancestor.

2025-06-28 14:43:15.646 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did mammals evolve from reptiles?

2025-06-28 14:43:15.655 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:16.029 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What year did World War II end?
"
2025-06-28 14:43:16.029 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What year did World War II end?

2025-06-28 14:43:16.029 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What year did World War II end?

2025-06-28 14:43:16.736 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What year did World War II end?
, Answer: 1945

2025-06-28 14:43:17.084 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What year did World War II end?

2025-06-28 14:43:17.085 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:17.509 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What year did World War II end?
"
2025-06-28 14:43:17.509 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What year did World War II end?

2025-06-28 14:43:17.509 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What year did World War II end?

2025-06-28 14:43:18.255 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What year did World War II end?
, Answer: 1945

2025-06-28 14:43:18.647 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What year did World War II end?

2025-06-28 14:43:18.647 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:19.084 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto reclassified?
"
2025-06-28 14:43:19.084 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto reclassified?

2025-06-28 14:43:19.084 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto reclassified?

2025-06-28 14:43:19.852 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto reclassified?
, Answer: Yes, to a dwarf planet.

2025-06-28 14:43:20.247 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto reclassified?

2025-06-28 14:43:20.247 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:20.588 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did life evolve?
"
2025-06-28 14:43:20.588 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did life evolve?

2025-06-28 14:43:20.589 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did life evolve?

2025-06-28 14:43:21.237 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did life evolve?
, Answer: Yes, life evolved.

2025-06-28 14:43:21.598 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did life evolve?

2025-06-28 14:43:21.599 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:22.171 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs die out?
"
2025-06-28 14:43:22.174 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs die out?

2025-06-28 14:43:22.174 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs die out?

2025-06-28 14:43:22.848 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs die out?
, Answer: Yes, most non-avian dinosaurs died out.

2025-06-28 14:43:23.300 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs die out?

2025-06-28 14:43:23.300 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:23.754 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Rome fall?
"
2025-06-28 14:43:23.755 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Rome fall?

2025-06-28 14:43:23.755 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Rome fall?

2025-06-28 14:43:24.824 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Rome fall?
, Answer: The Western Roman Empire fell; the Eastern Roman Empire (Byzantine Empire) continued.

2025-06-28 14:43:25.250 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Rome fall?

2025-06-28 14:43:25.250 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:25.269 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Lincoln assassinated?
"
2025-06-28 14:43:25.269 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Lincoln assassinated?

2025-06-28 14:43:25.269 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Lincoln assassinated?

2025-06-28 14:43:25.950 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Lincoln assassinated?
, Answer: Yes.

2025-06-28 14:43:26.378 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Lincoln assassinated?

2025-06-28 14:43:26.378 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:43:26.506 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1990?"
2025-06-28 14:43:26.507 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1990?

2025-06-28 14:43:26.507 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1990?

2025-06-28 14:43:26.821 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 36 seconds
2025-06-28 14:43:26.838 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Did the Berlin Wall fall in 1990?

2025-06-28 14:43:26.838 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 14:43:26.838 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 36 seconds...
2025-06-28 14:43:26.838 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 14:43:33.304 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 14:43:43.541 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 14:43:53.634 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 14:44:03.717 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 14:44:03.719 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 14:44:05.526 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is water's chemical formula?
"
2025-06-28 14:44:05.526 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is water's chemical formula?

2025-06-28 14:44:05.526 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is water's chemical formula?

2025-06-28 14:44:06.098 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is water's chemical formula?
, Answer: H₂O

2025-06-28 14:44:06.481 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is water's chemical formula?

2025-06-28 14:44:06.481 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:07.057 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Lincoln free slaves?
"
2025-06-28 14:44:07.057 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Lincoln free slaves?

2025-06-28 14:44:07.057 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Lincoln free slaves?

2025-06-28 14:44:07.750 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Lincoln free slaves?
, Answer: Lincoln's Emancipation Proclamation freed slaves in Confederate-held territory.

2025-06-28 14:44:08.074 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Lincoln free slaves?

2025-06-28 14:44:08.074 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:08.492 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:44:08.492 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:44:08.493 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:44:09.110 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: Depends on the conflict.

2025-06-28 14:44:09.401 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:44:09.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:10.055 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs go extinct?
"
2025-06-28 14:44:10.055 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs go extinct?

2025-06-28 14:44:10.055 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs go extinct?

2025-06-28 14:44:10.653 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs go extinct?
, Answer: Yes, most non-avian dinosaurs went extinct.

2025-06-28 14:44:10.974 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs go extinct?

2025-06-28 14:44:10.974 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:11.609 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto reclassified?
"
2025-06-28 14:44:11.609 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto reclassified?

2025-06-28 14:44:11.609 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto reclassified?

2025-06-28 14:44:12.384 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto reclassified?
, Answer: Yes, Pluto was reclassified as a dwarf planet in 2006.

2025-06-28 14:44:12.742 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto reclassified?

2025-06-28 14:44:12.742 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:13.094 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs die out?
"
2025-06-28 14:44:13.095 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs die out?

2025-06-28 14:44:13.095 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs die out?

2025-06-28 14:44:14.090 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs die out?
, Answer: Yes, most non-avian dinosaurs died out.

2025-06-28 14:44:14.409 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs die out?

2025-06-28 14:44:14.409 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:14.534 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won WWII?
"
2025-06-28 14:44:14.534 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won WWII?

2025-06-28 14:44:14.534 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won WWII?

2025-06-28 14:44:15.147 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won WWII?
, Answer: The Allied Powers won WWII.

2025-06-28 14:44:15.464 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won WWII?

2025-06-28 14:44:15.464 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:16.040 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs survive?
"
2025-06-28 14:44:16.040 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs survive?

2025-06-28 14:44:16.040 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs survive?

2025-06-28 14:44:16.685 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs survive?
, Answer: Non-avian dinosaurs did not survive. Birds are avian dinosaurs.

2025-06-28 14:44:17.066 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs survive?

2025-06-28 14:44:17.068 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:17.519 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs survive?
"
2025-06-28 14:44:17.520 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs survive?

2025-06-28 14:44:17.520 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs survive?

2025-06-28 14:44:18.275 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs survive?
, Answer: Non-avian dinosaurs went extinct, but birds are their direct descendants.

2025-06-28 14:44:18.633 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs survive?

2025-06-28 14:44:18.633 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:19.177 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Lincoln free slaves?
"
2025-06-28 14:44:19.178 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Lincoln free slaves?

2025-06-28 14:44:19.178 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Lincoln free slaves?

2025-06-28 14:44:19.985 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Lincoln free slaves?
, Answer: Lincoln's Emancipation Proclamation freed slaves in Confederate-held territory.

2025-06-28 14:44:20.317 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Lincoln free slaves?

2025-06-28 14:44:20.317 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:20.585 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Rome fall?
"
2025-06-28 14:44:20.585 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Rome fall?

2025-06-28 14:44:20.586 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Rome fall?

2025-06-28 14:44:21.300 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Rome fall?
, Answer: The Western Roman Empire fell, the Eastern Roman Empire (Byzantine Empire) persisted.

2025-06-28 14:44:21.687 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Rome fall?

2025-06-28 14:44:21.688 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:22.086 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Lincoln free slaves?
"
2025-06-28 14:44:22.087 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Lincoln free slaves?

2025-06-28 14:44:22.087 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Lincoln free slaves?

2025-06-28 14:44:22.790 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Lincoln free slaves?
, Answer: Lincoln's Emancipation Proclamation freed slaves in Confederate-held territory.

2025-06-28 14:44:23.167 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Lincoln free slaves?

2025-06-28 14:44:23.168 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:23.565 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:44:23.565 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:23.565 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:24.182 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall in 1988?
, Answer: No.

2025-06-28 14:44:24.566 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:24.567 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:24.992 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Roman Empire fall?
"
2025-06-28 14:44:24.993 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Roman Empire fall?

2025-06-28 14:44:24.993 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Roman Empire fall?

2025-06-28 14:44:25.651 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Roman Empire fall?
, Answer: The Western Roman Empire fell; the Eastern Roman Empire (Byzantine Empire) persisted.

2025-06-28 14:44:26.025 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Roman Empire fall?

2025-06-28 14:44:26.025 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:26.514 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:44:26.515 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:44:26.515 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:44:27.114 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:44:27.514 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:44:27.514 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:44:28.166 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:44:28.167 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:28.167 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:28.897 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall in 1988?
, Answer: No.

2025-06-28 14:44:29.283 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall in 1988?

2025-06-28 14:44:29.283 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:04.056 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What causes tides?
"
2025-06-28 14:45:04.057 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What causes tides?

2025-06-28 14:45:04.057 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What causes tides?

2025-06-28 14:45:04.824 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What causes tides?
, Answer: Gravitational pull of the moon and sun on Earth's oceans.

2025-06-28 14:45:05.171 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What causes tides?

2025-06-28 14:45:05.171 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:05.535 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did life exist before Earth?
"
2025-06-28 14:45:05.535 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did life exist before Earth?

2025-06-28 14:45:05.535 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did life exist before Earth?

2025-06-28 14:45:06.271 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did life exist before Earth?
, Answer: No definitive scientific evidence supports life before Earth.

2025-06-28 14:45:06.622 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did life exist before Earth?

2025-06-28 14:45:06.622 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:07.084 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What's water's chemical formula?
"
2025-06-28 14:45:07.084 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What's water's chemical formula?

2025-06-28 14:45:07.084 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What's water's chemical formula?

2025-06-28 14:45:07.748 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What's water's chemical formula?
, Answer: H₂O

2025-06-28 14:45:08.046 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What's water's chemical formula?

2025-06-28 14:45:08.046 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:08.539 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Lincoln free slaves?
"
2025-06-28 14:45:08.539 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Lincoln free slaves?

2025-06-28 14:45:08.540 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Lincoln free slaves?

2025-06-28 14:45:09.282 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Lincoln free slaves?
, Answer: Lincoln's Emancipation Proclamation freed slaves only in Confederate-held territory.

2025-06-28 14:45:09.635 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Lincoln free slaves?

2025-06-28 14:45:09.635 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:10.041 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs survive?
"
2025-06-28 14:45:10.041 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs survive?

2025-06-28 14:45:10.041 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs survive?

2025-06-28 14:45:10.876 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs survive?
, Answer: Non-avian dinosaurs did not survive. Birds are avian dinosaurs.

2025-06-28 14:45:11.215 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs survive?

2025-06-28 14:45:11.215 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:11.556 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:45:11.557 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:45:11.557 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:45:12.144 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:45:12.443 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:45:12.443 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:13.066 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:45:13.066 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:45:13.066 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:45:13.736 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall in 1988?
, Answer: No, it fell in 1989.

2025-06-28 14:45:14.062 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall in 1988?

2025-06-28 14:45:14.064 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:14.491 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What killed the dinosaurs?
"
2025-06-28 14:45:14.491 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What killed the dinosaurs?

2025-06-28 14:45:14.491 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What killed the dinosaurs?

2025-06-28 14:45:15.179 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What killed the dinosaurs?
, Answer: Asteroid impact.

2025-06-28 14:45:15.537 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What killed the dinosaurs?

2025-06-28 14:45:15.537 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:16.055 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:45:16.055 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:45:16.055 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:45:16.823 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: Need context. Winner depends on the event.

2025-06-28 14:45:17.206 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:45:17.211 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:17.622 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did life exist before oxygen?
"
2025-06-28 14:45:17.622 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did life exist before oxygen?

2025-06-28 14:45:17.622 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did life exist before oxygen?

2025-06-28 14:45:18.233 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did life exist before oxygen?
, Answer: Yes, anaerobic life predates oxygen.

2025-06-28 14:45:18.538 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did life exist before oxygen?

2025-06-28 14:45:18.539 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:19.026 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:45:19.026 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:45:19.026 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:45:19.740 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: It depends on the conflict you're asking about.

2025-06-28 14:45:20.030 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:45:20.030 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:20.555 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the US win the Vietnam War?
"
2025-06-28 14:45:20.555 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the US win the Vietnam War?

2025-06-28 14:45:20.555 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the US win the Vietnam War?

2025-06-28 14:45:21.192 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the US win the Vietnam War?
, Answer: No.

2025-06-28 14:45:21.500 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the US win the Vietnam War?

2025-06-28 14:45:21.500 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:22.268 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:45:22.268 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:45:22.269 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:45:22.988 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: The victor depends on the specific historical event in question.

2025-06-28 14:45:23.372 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:45:23.372 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:23.568 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever a planet?
"
2025-06-28 14:45:23.568 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever a planet?

2025-06-28 14:45:23.569 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever a planet?

2025-06-28 14:45:24.294 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever a planet?
, Answer: Yes, Pluto was considered a planet from 1930 to 2006.

2025-06-28 14:45:24.601 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever a planet?

2025-06-28 14:45:24.602 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:25.071 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto demoted?
"
2025-06-28 14:45:25.071 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto demoted?

2025-06-28 14:45:25.071 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto demoted?

2025-06-28 14:45:25.742 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto demoted?
, Answer: Yes, reclassified as a dwarf planet.

2025-06-28 14:45:26.057 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto demoted?

2025-06-28 14:45:26.057 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:45:26.523 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall?
"
2025-06-28 14:45:26.523 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall?

2025-06-28 14:45:26.523 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall?

2025-06-28 14:45:27.211 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall?
, Answer: Yes.

2025-06-28 14:45:27.561 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall?

2025-06-28 14:45:27.561 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:04.131 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the South secede?
"
2025-06-28 14:46:04.131 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the South secede?

2025-06-28 14:46:04.131 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the South secede?

2025-06-28 14:46:04.800 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the South secede?
, Answer: Yes.

2025-06-28 14:46:05.150 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the South secede?

2025-06-28 14:46:05.150 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:05.573 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:46:05.573 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:46:05.573 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:46:06.340 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: It depends on the conflict.

2025-06-28 14:46:06.651 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:46:06.652 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:07.024 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who discovered penicillin?
"
2025-06-28 14:46:07.024 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who discovered penicillin?

2025-06-28 14:46:07.024 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who discovered penicillin?

2025-06-28 14:46:07.717 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who discovered penicillin?
, Answer: Alexander Fleming

2025-06-28 14:46:08.049 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who discovered penicillin?

2025-06-28 14:46:08.049 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:08.593 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:46:08.593 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:46:08.593 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:46:09.261 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:46:09.592 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:46:09.592 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:10.008 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who invented the lightbulb?
"
2025-06-28 14:46:10.008 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who invented the lightbulb?

2025-06-28 14:46:10.009 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who invented the lightbulb?

2025-06-28 14:46:10.677 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who invented the lightbulb?
, Answer: Thomas Edison.

2025-06-28 14:46:11.053 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who invented the lightbulb?

2025-06-28 14:46:11.053 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:11.724 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever a planet?
"
2025-06-28 14:46:11.724 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever a planet?

2025-06-28 14:46:11.724 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever a planet?

2025-06-28 14:46:12.498 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever a planet?
, Answer: Yes, from 1930 to 2006.

2025-06-28 14:46:12.920 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever a planet?

2025-06-28 14:46:12.920 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:13.072 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Titanic sink?
"
2025-06-28 14:46:13.072 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Titanic sink?

2025-06-28 14:46:13.073 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Titanic sink?

2025-06-28 14:46:13.613 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Titanic sink?
, Answer: Yes.

2025-06-28 14:46:13.911 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Titanic sink?

2025-06-28 14:46:13.912 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:14.585 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:46:14.585 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:14.585 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:15.298 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall in 1988?
, Answer: No.

2025-06-28 14:46:15.633 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:15.633 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:16.005 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the South secede?
"
2025-06-28 14:46:16.006 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the South secede?

2025-06-28 14:46:16.006 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the South secede?

2025-06-28 14:46:16.639 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the South secede?
, Answer: Yes.

2025-06-28 14:46:16.985 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the South secede?

2025-06-28 14:46:16.985 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:17.486 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs exist?
"
2025-06-28 14:46:17.486 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs exist?

2025-06-28 14:46:17.486 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs exist?

2025-06-28 14:46:18.121 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs exist?
, Answer: Yes, dinosaurs existed.

2025-06-28 14:46:18.496 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs exist?

2025-06-28 14:46:18.497 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:19.049 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who invented the telephone?
"
2025-06-28 14:46:19.051 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who invented the telephone?

2025-06-28 14:46:19.051 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who invented the telephone?

2025-06-28 14:46:19.680 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who invented the telephone?
, Answer: Alexander Graham Bell.

2025-06-28 14:46:20.013 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who invented the telephone?

2025-06-28 14:46:20.157 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:20.530 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:46:20.530 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:46:20.530 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:46:21.251 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: It depends on the event.

2025-06-28 14:46:21.553 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:46:21.553 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:22.094 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs fly?
"
2025-06-28 14:46:22.094 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs fly?

2025-06-28 14:46:22.094 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs fly?

2025-06-28 14:46:22.765 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs fly?
, Answer: Some dinosaurs evolved into birds and flew.

2025-06-28 14:46:23.173 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs fly?

2025-06-28 14:46:23.173 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:23.804 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever a planet?
"
2025-06-28 14:46:23.804 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever a planet?

2025-06-28 14:46:23.804 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever a planet?

2025-06-28 14:46:24.498 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever a planet?
, Answer: Yes, Pluto was formerly classified as a planet.

2025-06-28 14:46:24.874 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever a planet?

2025-06-28 14:46:24.874 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:25.134 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Nixon resign?
"
2025-06-28 14:46:25.134 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Nixon resign?

2025-06-28 14:46:25.134 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Nixon resign?

2025-06-28 14:46:25.783 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Nixon resign?
, Answer: Yes.

2025-06-28 14:46:26.147 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Nixon resign?

2025-06-28 14:46:26.147 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:46:26.627 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:46:26.627 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:26.627 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:26.918 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 36 seconds
2025-06-28 14:46:26.921 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:46:26.921 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 14:46:26.921 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 36 seconds...
2025-06-28 14:46:26.922 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 14:46:33.079 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 14:46:43.176 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 14:46:53.286 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 14:47:03.365 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 14:47:03.365 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 14:47:04.100 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Rome fall?
"
2025-06-28 14:47:04.100 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Rome fall?

2025-06-28 14:47:04.100 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Rome fall?

2025-06-28 14:47:04.830 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Rome fall?
, Answer: The Western Roman Empire fell; the Eastern Roman Empire (Byzantine Empire) continued.

2025-06-28 14:47:05.199 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Rome fall?

2025-06-28 14:47:05.199 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:05.533 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Allies win?
"
2025-06-28 14:47:05.533 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Allies win?

2025-06-28 14:47:05.533 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Allies win?

2025-06-28 14:47:06.208 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Allies win?
, Answer: Yes.

2025-06-28 14:47:06.605 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Allies win?

2025-06-28 14:47:06.605 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:07.074 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs roam Earth?
"
2025-06-28 14:47:07.074 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs roam Earth?

2025-06-28 14:47:07.074 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs roam Earth?

2025-06-28 14:47:07.709 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs roam Earth?
, Answer: Yes, dinosaurs roamed Earth.

2025-06-28 14:47:08.109 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs roam Earth?

2025-06-28 14:47:08.109 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:08.485 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:47:08.485 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:47:08.485 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:47:09.135 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: Please provide context. Who won what?

2025-06-28 14:47:09.442 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:47:09.442 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:10.151 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Berlin Wall fall in 1988?
"
2025-06-28 14:47:10.151 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Berlin Wall fall in 1988?

2025-06-28 14:47:10.151 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Berlin Wall fall in 1988?

2025-06-28 14:47:10.740 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Berlin Wall fall in 1988?
, Answer: No.

2025-06-28 14:47:11.155 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Berlin Wall fall in 1988?

2025-06-28 14:47:11.155 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:11.520 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did life originate on Earth?
"
2025-06-28 14:47:11.520 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did life originate on Earth?

2025-06-28 14:47:11.520 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did life originate on Earth?

2025-06-28 14:47:12.220 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did life originate on Earth?
, Answer: The prevailing scientific theory suggests life originated on Earth.

2025-06-28 14:47:12.611 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did life originate on Earth?

2025-06-28 14:47:12.611 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:13.077 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever considered a planet?
"
2025-06-28 14:47:13.077 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever considered a planet?

2025-06-28 14:47:13.083 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever considered a planet?

2025-06-28 14:47:13.750 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever considered a planet?
, Answer: Yes, for 76 years.

2025-06-28 14:47:14.102 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever considered a planet?

2025-06-28 14:47:14.102 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:14.541 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs die out suddenly?
"
2025-06-28 14:47:14.542 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs die out suddenly?

2025-06-28 14:47:14.542 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs die out suddenly?

2025-06-28 14:47:15.346 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs die out suddenly?
, Answer: Evidence suggests a sudden die-off, likely due to an asteroid impact.

2025-06-28 14:47:15.727 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs die out suddenly?

2025-06-28 14:47:15.727 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:16.008 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Was Pluto ever a planet?
"
2025-06-28 14:47:16.009 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Was Pluto ever a planet?

2025-06-28 14:47:16.009 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Was Pluto ever a planet?

2025-06-28 14:47:16.697 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Was Pluto ever a planet?
, Answer: Yes, Pluto was considered a planet from 1930 to 2006.

2025-06-28 14:47:17.071 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Was Pluto ever a planet?

2025-06-28 14:47:17.071 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:17.501 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the Titanic sink?
"
2025-06-28 14:47:17.501 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the Titanic sink?

2025-06-28 14:47:17.501 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the Titanic sink?

2025-06-28 14:47:18.095 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the Titanic sink?
, Answer: Yes.

2025-06-28 14:47:18.543 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the Titanic sink?

2025-06-28 14:47:18.543 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:19.123 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did dinosaurs have feathers?
"
2025-06-28 14:47:19.124 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did dinosaurs have feathers?

2025-06-28 14:47:19.124 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did dinosaurs have feathers?

2025-06-28 14:47:19.804 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did dinosaurs have feathers?
, Answer: Some dinosaurs did have feathers.

2025-06-28 14:47:20.116 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did dinosaurs have feathers?

2025-06-28 14:47:20.116 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:20.509 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs become extinct?
"
2025-06-28 14:47:20.509 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs become extinct?

2025-06-28 14:47:20.509 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs become extinct?

2025-06-28 14:47:21.126 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the dinosaurs become extinct?
, Answer: Yes.

2025-06-28 14:47:21.408 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the dinosaurs become extinct?

2025-06-28 14:47:21.408 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:22.023 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the U.S. win the Vietnam War?
"
2025-06-28 14:47:22.024 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the U.S. win the Vietnam War?

2025-06-28 14:47:22.024 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the U.S. win the Vietnam War?

2025-06-28 14:47:22.667 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did the U.S. win the Vietnam War?
, Answer: No.

2025-06-28 14:47:23.033 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did the U.S. win the Vietnam War?

2025-06-28 14:47:23.033 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:23.451 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who discovered penicillin?
"
2025-06-28 14:47:23.452 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who discovered penicillin?

2025-06-28 14:47:23.452 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who discovered penicillin?

2025-06-28 14:47:24.121 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who discovered penicillin?
, Answer: Alexander Fleming.

2025-06-28 14:47:24.460 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who discovered penicillin?

2025-06-28 14:47:24.460 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:25.094 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did mammals evolve from reptiles?
"
2025-06-28 14:47:25.095 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did mammals evolve from reptiles?

2025-06-28 14:47:25.095 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did mammals evolve from reptiles?

2025-06-28 14:47:25.810 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did mammals evolve from reptiles?
, Answer: No, mammals and reptiles share a common amniote ancestor.

2025-06-28 14:47:26.207 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did mammals evolve from reptiles?

2025-06-28 14:47:26.207 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:26.482 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who won?
"
2025-06-28 14:47:26.482 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who won?

2025-06-28 14:47:26.483 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who won?

2025-06-28 14:47:27.244 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who won?
, Answer: Need more context. What event/conflict are you asking about?

2025-06-28 14:47:27.604 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who won?

2025-06-28 14:47:27.604 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:27.978 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did Pluto get reclassified?
"
2025-06-28 14:47:27.978 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did Pluto get reclassified?

2025-06-28 14:47:27.978 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did Pluto get reclassified?

2025-06-28 14:47:28.669 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Did Pluto get reclassified?
, Answer: Yes, reclassified as a dwarf planet in 2006.

2025-06-28 14:47:29.036 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Did Pluto get reclassified?

2025-06-28 14:47:29.036 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA processed and saved successfully.
2025-06-28 14:47:29.516 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Did the dinosaurs go extinct?
"
2025-06-28 14:47:29.516 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Did the dinosaurs go extinct?

2025-06-28 14:47:29.516 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Did the dinosaurs go extinct?

2025-06-28 14:47:29.808 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 33 seconds
2025-06-28 14:47:29.808 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Did the dinosaurs go extinct?

2025-06-28 14:47:29.808 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 14:47:29.808 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 33 seconds...
2025-06-28 14:47:29.808 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 14:47:32.835 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 14:47:42.929 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 14:47:52.981 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 14:48:03.074 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 14:48:03.075 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 14:50:19.273 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: partitions revoked: [practice5-0]
2025-06-28 14:50:19.722 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: Consumer stopped
2025-06-28 14:50:19.722 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-28 14:50:19.757 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-28 14:50:21.799 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-28 14:50:21.821 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-28 14:50:22.622 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-28 23:12:51.381 [main] INFO  c.kafka.consumer.ConsumerApplication - Starting ConsumerApplication using Java 22.0.1 with PID 17280 (F:\Projects\Practice\consumer\target\classes started by SOHAM in F:\Projects\Practice\consumer)
2025-06-28 23:12:51.496 [main] DEBUG c.kafka.consumer.ConsumerApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-28 23:12:51.497 [main] INFO  c.kafka.consumer.ConsumerApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-28 23:12:53.724 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-28 23:12:54.231 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 462 ms. Found 1 JPA repository interface.
2025-06-28 23:12:56.209 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-28 23:12:56.253 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-28 23:12:56.255 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-06-28 23:12:56.407 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-28 23:12:56.407 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4755 ms
2025-06-28 23:12:56.878 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-28 23:13:00.270 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@646d810b
2025-06-28 23:13:00.275 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-28 23:13:00.396 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-28 23:13:00.560 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-06-28 23:13:00.667 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-28 23:13:01.651 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-28 23:13:02.036 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-28 23:13:02.665 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-28 23:13:04.365 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-28 23:13:04.372 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-28 23:13:05.727 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-28 23:13:06.590 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalStateException: Another endpoint is already registered with id 'qna-listener'
2025-06-28 23:13:06.595 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-28 23:13:06.597 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-28 23:13:07.506 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-28 23:13:07.506 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-28 23:13:07.532 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-28 23:13:07.557 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Another endpoint is already registered with id 'qna-listener'
	at org.springframework.util.Assert.state(Assert.java:79)
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.registerListenerContainer(KafkaListenerEndpointRegistry.java:266)
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.registerListenerContainer(KafkaListenerEndpointRegistry.java:240)
	at org.springframework.kafka.config.KafkaListenerEndpointRegistrar.registerAllEndpoints(KafkaListenerEndpointRegistrar.java:203)
	at org.springframework.kafka.config.KafkaListenerEndpointRegistrar.afterPropertiesSet(KafkaListenerEndpointRegistrar.java:192)
	at org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor.afterSingletonsInstantiated(KafkaListenerAnnotationBeanPostProcessor.java:351)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1150)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.kafka.consumer.ConsumerApplication.main(ConsumerApplication.java:10)
2025-06-28 23:14:39.826 [main] INFO  c.kafka.consumer.ConsumerApplication - Starting ConsumerApplication using Java 22.0.1 with PID 17320 (F:\Projects\Practice\consumer\target\classes started by SOHAM in F:\Projects\Practice\consumer)
2025-06-28 23:14:39.830 [main] DEBUG c.kafka.consumer.ConsumerApplication - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-06-28 23:14:39.832 [main] INFO  c.kafka.consumer.ConsumerApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-28 23:14:42.120 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-28 23:14:42.472 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 318 ms. Found 1 JPA repository interface.
2025-06-28 23:14:44.262 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-28 23:14:44.310 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-28 23:14:44.312 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-06-28 23:14:44.512 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-28 23:14:44.512 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4506 ms
2025-06-28 23:14:44.958 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-28 23:14:46.860 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16e1219f
2025-06-28 23:14:46.863 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-28 23:14:46.975 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-28 23:14:47.137 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-06-28 23:14:47.227 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-28 23:14:48.970 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-28 23:14:49.400 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-28 23:14:49.688 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-28 23:14:51.177 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-28 23:14:51.183 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-28 23:14:52.382 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-28 23:14:53.448 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-06-28 23:14:54.547 [main] INFO  c.kafka.consumer.ConsumerApplication - Started ConsumerApplication in 16.493 seconds (process running for 17.553)
2025-06-28 23:14:56.312 [qna-listener2-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] The metadata response from the cluster reported a recoverable issue with correlation id 2 : {level1-retry=UNKNOWN_TOPIC_OR_PARTITION}
2025-06-28 23:14:56.444 [qna-listener2-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] The metadata response from the cluster reported a recoverable issue with correlation id 8 : {level1-retry=UNKNOWN_TOPIC_OR_PARTITION}
2025-06-28 23:15:02.081 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: partitions assigned: [practice5-0]
2025-06-28 23:15:02.183 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: partitions assigned: [level1-retry-0]
2025-06-28 23:15:02.287 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of France?"
2025-06-28 23:15:02.287 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of France?
2025-06-28 23:15:02.287 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of France?
2025-06-28 23:15:04.116 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of France?, Answer: Paris.

2025-06-28 23:15:04.856 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of France?
2025-06-28 23:15:04.859 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:105 processed and saved successfully.
2025-06-28 23:15:04.863 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 2+2?"
2025-06-28 23:15:04.863 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 2+2?
2025-06-28 23:15:04.863 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 2+2?
2025-06-28 23:15:05.477 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 2+2?, Answer: Four.

2025-06-28 23:15:05.836 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 2+2?
2025-06-28 23:15:05.836 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:106 processed and saved successfully.
2025-06-28 23:15:05.836 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What color is the sky?"
2025-06-28 23:15:05.836 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What color is the sky?
2025-06-28 23:15:05.836 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What color is the sky?
2025-06-28 23:15:06.719 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What color is the sky?, Answer: Blue.

2025-06-28 23:15:07.064 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What color is the sky?
2025-06-28 23:15:07.064 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:107 processed and saved successfully.
2025-06-28 23:15:07.064 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is H2O?"
2025-06-28 23:15:07.064 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is H2O?
2025-06-28 23:15:07.064 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is H2O?
2025-06-28 23:15:07.842 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is H2O?, Answer: Water.

2025-06-28 23:15:08.204 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is H2O?
2025-06-28 23:15:08.205 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:108 processed and saved successfully.
2025-06-28 23:15:08.205 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which planet is red?"
2025-06-28 23:15:08.205 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet is red?
2025-06-28 23:15:08.205 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which planet is red?
2025-06-28 23:15:08.976 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which planet is red?, Answer: Mars.

2025-06-28 23:15:09.376 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which planet is red?
2025-06-28 23:15:09.376 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:109 processed and saved successfully.
2025-06-28 23:15:09.381 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of hot?"
2025-06-28 23:15:09.381 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of hot?
2025-06-28 23:15:09.381 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of hot?
2025-06-28 23:15:10.097 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the opposite of hot?, Answer: Cold.

2025-06-28 23:15:10.432 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of hot?
2025-06-28 23:15:10.432 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:110 processed and saved successfully.
2025-06-28 23:15:10.434 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the square root of 9?"
2025-06-28 23:15:10.434 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the square root of 9?
2025-06-28 23:15:10.434 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the square root of 9?
2025-06-28 23:15:11.307 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the square root of 9?, Answer: Three.

2025-06-28 23:15:11.730 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the square root of 9?
2025-06-28 23:15:11.730 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:111 processed and saved successfully.
2025-06-28 23:15:11.730 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What gas do we breathe?"
2025-06-28 23:15:11.730 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What gas do we breathe?
2025-06-28 23:15:11.730 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What gas do we breathe?
2025-06-28 23:15:12.339 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What gas do we breathe?, Answer: Oxygen.

2025-06-28 23:15:12.713 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What gas do we breathe?
2025-06-28 23:15:12.713 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:112 processed and saved successfully.
2025-06-28 23:15:12.713 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the freezing point of water?"
2025-06-28 23:15:12.713 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the freezing point of water?
2025-06-28 23:15:12.713 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the freezing point of water?
2025-06-28 23:15:13.677 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the freezing point of water?, Answer: 0 degrees Celsius or 32 degrees Fahrenheit.

2025-06-28 23:15:14.047 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the freezing point of water?
2025-06-28 23:15:14.047 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:113 processed and saved successfully.
2025-06-28 23:15:14.047 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the largest ocean?"
2025-06-28 23:15:14.048 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the largest ocean?
2025-06-28 23:15:14.048 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the largest ocean?
2025-06-28 23:15:14.759 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the largest ocean?, Answer: The Pacific Ocean.

2025-06-28 23:15:15.137 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the largest ocean?
2025-06-28 23:15:15.145 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:114 processed and saved successfully.
2025-06-28 23:15:15.146 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the currency of Japan?"
2025-06-28 23:15:15.146 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the currency of Japan?
2025-06-28 23:15:15.146 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the currency of Japan?
2025-06-28 23:15:15.986 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the currency of Japan?, Answer: Japanese Yen.

2025-06-28 23:15:16.336 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the currency of Japan?
2025-06-28 23:15:16.345 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:115 processed and saved successfully.
2025-06-28 23:15:16.345 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who painted the Mona Lisa?"
2025-06-28 23:15:16.346 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who painted the Mona Lisa?
2025-06-28 23:15:16.346 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who painted the Mona Lisa?
2025-06-28 23:15:17.106 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who painted the Mona Lisa?, Answer: Leonardo da Vinci.

2025-06-28 23:15:17.466 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who painted the Mona Lisa?
2025-06-28 23:15:17.466 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:116 processed and saved successfully.
2025-06-28 23:15:17.466 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the speed of light?"
2025-06-28 23:15:17.466 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the speed of light?
2025-06-28 23:15:17.466 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the speed of light?
2025-06-28 23:15:18.322 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the speed of light?, Answer: Approximately 299,792,458 meters per second.

2025-06-28 23:15:18.656 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the speed of light?
2025-06-28 23:15:18.656 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:117 processed and saved successfully.
2025-06-28 23:15:18.656 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What language is spoken in Brazil?"
2025-06-28 23:15:18.656 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What language is spoken in Brazil?
2025-06-28 23:15:18.658 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What language is spoken in Brazil?
2025-06-28 23:15:19.306 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What language is spoken in Brazil?, Answer: Portuguese.

2025-06-28 23:15:19.677 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What language is spoken in Brazil?
2025-06-28 23:15:19.677 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:118 processed and saved successfully.
2025-06-28 23:15:19.677 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 5*5?"
2025-06-28 23:15:19.677 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 5*5?
2025-06-28 23:15:19.677 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 5*5?
2025-06-28 23:15:20.736 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 5*5?, Answer: This question is mathematical, not historical. 5 * 5 = 25.

2025-06-28 23:15:21.105 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 5*5?
2025-06-28 23:15:21.105 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:119 processed and saved successfully.
2025-06-28 23:15:21.106 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What planet do we live on?"
2025-06-28 23:15:21.106 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet do we live on?
2025-06-28 23:15:21.106 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What planet do we live on?
2025-06-28 23:15:21.856 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What planet do we live on?, Answer: Earth

2025-06-28 23:15:22.217 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What planet do we live on?
2025-06-28 23:15:22.217 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:120 processed and saved successfully.
2025-06-28 23:15:22.217 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of India?"
2025-06-28 23:15:22.217 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of India?
2025-06-28 23:15:22.217 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of India?
2025-06-28 23:15:22.956 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of India?, Answer: New Delhi.

2025-06-28 23:15:23.343 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of India?
2025-06-28 23:15:23.343 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:121 processed and saved successfully.
2025-06-28 23:15:23.344 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 10 divided by 2?"
2025-06-28 23:15:23.344 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 10 divided by 2?
2025-06-28 23:15:23.344 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 10 divided by 2?
2025-06-28 23:15:23.795 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 39 seconds
2025-06-28 23:15:23.811 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 10 divided by 2?
2025-06-28 23:15:23.811 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:23.964 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 39 seconds...
2025-06-28 23:15:23.965 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:23.969 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the chemical symbol for gold?"
2025-06-28 23:15:23.969 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for gold?
2025-06-28 23:15:23.971 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the chemical symbol for gold?
2025-06-28 23:15:24.193 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 10 divided by 2?"
2025-06-28 23:15:24.194 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:122, Question: What is 10 divided by 2?, Offset: 0
2025-06-28 23:15:24.201 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 10 divided by 2?
2025-06-28 23:15:24.201 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 10 divided by 2?
2025-06-28 23:15:24.931 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 38 seconds
2025-06-28 23:15:24.938 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the chemical symbol for gold?
2025-06-28 23:15:24.941 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:24.942 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 38 seconds...
2025-06-28 23:15:24.942 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:24.944 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who wrote '1984'?"
2025-06-28 23:15:24.945 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who wrote '1984'?
2025-06-28 23:15:24.945 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who wrote '1984'?
2025-06-28 23:15:24.962 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:123, Question: What is the chemical symbol for gold?, Offset: 1
2025-06-28 23:15:25.048 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 10 divided by 2?, Answer: 5

2025-06-28 23:15:25.431 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 10 divided by 2?
2025-06-28 23:15:25.431 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:122 processed and saved successfully.
2025-06-28 23:15:25.463 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the chemical symbol for gold?"
2025-06-28 23:15:25.464 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for gold?
2025-06-28 23:15:25.465 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the chemical symbol for gold?
2025-06-28 23:15:25.550 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 37 seconds
2025-06-28 23:15:25.552 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Who wrote '1984'?
2025-06-28 23:15:25.552 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:25.555 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 37 seconds...
2025-06-28 23:15:25.555 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:25.556 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the smallest prime number?"
2025-06-28 23:15:25.556 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the smallest prime number?
2025-06-28 23:15:25.556 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the smallest prime number?
2025-06-28 23:15:25.568 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:124, Question: Who wrote '1984'?, Offset: 2
2025-06-28 23:15:26.283 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the chemical symbol for gold?, Answer: Au

2025-06-28 23:15:26.523 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 36 seconds
2025-06-28 23:15:26.523 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the smallest prime number?
2025-06-28 23:15:26.523 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:26.523 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 36 seconds...
2025-06-28 23:15:26.523 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:26.523 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Italy?"
2025-06-28 23:15:26.525 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Italy?
2025-06-28 23:15:26.525 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Italy?
2025-06-28 23:15:26.532 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:125, Question: What is the smallest prime number?, Offset: 3
2025-06-28 23:15:26.716 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the chemical symbol for gold?
2025-06-28 23:15:26.717 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:123 processed and saved successfully.
2025-06-28 23:15:26.728 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Who wrote '1984'?"
2025-06-28 23:15:26.728 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who wrote '1984'?
2025-06-28 23:15:26.728 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Who wrote '1984'?
2025-06-28 23:15:27.050 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 36 seconds
2025-06-28 23:15:27.053 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the capital of Italy?
2025-06-28 23:15:27.053 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:27.053 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 36 seconds...
2025-06-28 23:15:27.053 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:27.055 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many continents are there?"
2025-06-28 23:15:27.056 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many continents are there?
2025-06-28 23:15:27.056 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many continents are there?
2025-06-28 23:15:27.064 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:126, Question: What is the capital of Italy?, Offset: 4
2025-06-28 23:15:27.413 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Who wrote '1984'?, Answer: George Orwell

2025-06-28 23:15:27.766 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who wrote '1984'?
2025-06-28 23:15:27.766 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:124 processed and saved successfully.
2025-06-28 23:15:27.783 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the smallest prime number?"
2025-06-28 23:15:27.783 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the smallest prime number?
2025-06-28 23:15:27.783 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the smallest prime number?
2025-06-28 23:15:28.067 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 35 seconds
2025-06-28 23:15:28.072 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many continents are there?
2025-06-28 23:15:28.072 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:28.072 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 35 seconds...
2025-06-28 23:15:28.072 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:28.074 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What shape has three sides?"
2025-06-28 23:15:28.074 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has three sides?
2025-06-28 23:15:28.075 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What shape has three sides?
2025-06-28 23:15:28.081 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:127, Question: How many continents are there?, Offset: 5
2025-06-28 23:15:28.638 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 34 seconds
2025-06-28 23:15:28.643 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What shape has three sides?
2025-06-28 23:15:28.643 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:28.645 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 34 seconds...
2025-06-28 23:15:28.645 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:28.645 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Germany?"
2025-06-28 23:15:28.646 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Germany?
2025-06-28 23:15:28.646 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Germany?
2025-06-28 23:15:28.654 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:128, Question: What shape has three sides?, Offset: 6
2025-06-28 23:15:28.695 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the smallest prime number?, Answer: 2

2025-06-28 23:15:29.071 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the smallest prime number?
2025-06-28 23:15:29.072 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:125 processed and saved successfully.
2025-06-28 23:15:29.087 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the capital of Italy?"
2025-06-28 23:15:29.089 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Italy?
2025-06-28 23:15:29.089 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the capital of Italy?
2025-06-28 23:15:29.665 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 33 seconds
2025-06-28 23:15:29.666 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the capital of Germany?
2025-06-28 23:15:29.667 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:29.667 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 33 seconds...
2025-06-28 23:15:29.667 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:29.668 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the national sport of Canada?"
2025-06-28 23:15:29.668 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the national sport of Canada?
2025-06-28 23:15:29.668 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the national sport of Canada?
2025-06-28 23:15:29.674 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:129, Question: What is the capital of Germany?, Offset: 7
2025-06-28 23:15:29.791 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the capital of Italy?, Answer: Rome.

2025-06-28 23:15:30.193 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Italy?
2025-06-28 23:15:30.193 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:126 processed and saved successfully.
2025-06-28 23:15:30.208 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many continents are there?"
2025-06-28 23:15:30.208 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many continents are there?
2025-06-28 23:15:30.208 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many continents are there?
2025-06-28 23:15:30.299 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 33 seconds
2025-06-28 23:15:30.300 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the national sport of Canada?
2025-06-28 23:15:30.300 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:30.301 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 33 seconds...
2025-06-28 23:15:30.301 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:30.301 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is water made of?"
2025-06-28 23:15:30.302 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is water made of?
2025-06-28 23:15:30.302 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is water made of?
2025-06-28 23:15:30.308 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:130, Question: What is the national sport of Canada?, Offset: 8
2025-06-28 23:15:31.032 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many continents are there?, Answer: Seven

2025-06-28 23:15:31.231 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 32 seconds
2025-06-28 23:15:31.231 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is water made of?
2025-06-28 23:15:31.232 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:31.232 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 32 seconds...
2025-06-28 23:15:31.232 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:31.233 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many days in a week?"
2025-06-28 23:15:31.233 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many days in a week?
2025-06-28 23:15:31.234 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many days in a week?
2025-06-28 23:15:31.243 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:131, Question: What is water made of?, Offset: 9
2025-06-28 23:15:31.424 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many continents are there?
2025-06-28 23:15:31.425 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:127 processed and saved successfully.
2025-06-28 23:15:31.425 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has three sides?"
2025-06-28 23:15:31.426 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has three sides?
2025-06-28 23:15:31.426 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has three sides?
2025-06-28 23:15:31.762 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 31 seconds
2025-06-28 23:15:31.762 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many days in a week?
2025-06-28 23:15:31.762 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:31.763 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 31 seconds...
2025-06-28 23:15:31.763 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:31.763 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of big?"
2025-06-28 23:15:31.763 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of big?
2025-06-28 23:15:31.763 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of big?
2025-06-28 23:15:31.768 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:132, Question: How many days in a week?, Offset: 10
2025-06-28 23:15:32.257 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What shape has three sides?, Answer: Triangle.

2025-06-28 23:15:32.587 [Thread-8] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.602 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What shape has three sides?
2025-06-28 23:15:32.603 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:128 processed and saved successfully.
2025-06-28 23:15:32.615 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the capital of Germany?"
2025-06-28 23:15:32.615 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Germany?
2025-06-28 23:15:32.615 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the capital of Germany?
2025-06-28 23:15:32.618 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.695 [Thread-11] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.695 [Thread-12] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.772 [Thread-15] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.780 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 30 seconds
2025-06-28 23:15:32.781 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the opposite of big?
2025-06-28 23:15:32.781 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:32.781 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 30 seconds...
2025-06-28 23:15:32.781 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:32.782 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the plural of mouse?"
2025-06-28 23:15:32.782 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the plural of mouse?
2025-06-28 23:15:32.782 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the plural of mouse?
2025-06-28 23:15:32.782 [Thread-16] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:32.787 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:133, Question: What is the opposite of big?, Offset: 11
2025-06-28 23:15:33.035 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.066 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.112 [Thread-9] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.128 [Thread-10] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.253 [Thread-14] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.330 [Thread-13] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.393 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 30 seconds
2025-06-28 23:15:33.393 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the capital of Germany?, Answer: Berlin.

2025-06-28 23:15:33.393 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the plural of mouse?
2025-06-28 23:15:33.395 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:15:33.395 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 30 seconds...
2025-06-28 23:15:33.395 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:15:33.398 [Thread-17] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:15:33.401 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:134, Question: What is the plural of mouse?, Offset: 12
2025-06-28 23:15:33.785 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Germany?
2025-06-28 23:15:33.787 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:129 processed and saved successfully.
2025-06-28 23:15:33.798 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the national sport of Canada?"
2025-06-28 23:15:33.798 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the national sport of Canada?
2025-06-28 23:15:33.798 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the national sport of Canada?
2025-06-28 23:15:34.629 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the national sport of Canada?, Answer: Ice hockey and lacrosse.

2025-06-28 23:15:34.967 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the national sport of Canada?
2025-06-28 23:15:34.968 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:130 processed and saved successfully.
2025-06-28 23:15:34.968 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is water made of?"
2025-06-28 23:15:34.968 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is water made of?
2025-06-28 23:15:34.968 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is water made of?
2025-06-28 23:15:35.649 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is water made of?, Answer: Hydrogen and oxygen.

2025-06-28 23:15:36.019 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is water made of?
2025-06-28 23:15:36.020 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:131 processed and saved successfully.
2025-06-28 23:15:36.020 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many days in a week?"
2025-06-28 23:15:36.020 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many days in a week?
2025-06-28 23:15:36.021 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many days in a week?
2025-06-28 23:15:36.577 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many days in a week?, Answer: Seven

2025-06-28 23:15:36.957 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many days in a week?
2025-06-28 23:15:36.957 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:132 processed and saved successfully.
2025-06-28 23:15:36.971 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the opposite of big?"
2025-06-28 23:15:36.971 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of big?
2025-06-28 23:15:36.971 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the opposite of big?
2025-06-28 23:15:37.650 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the opposite of big?, Answer: Small.

2025-06-28 23:15:38.011 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of big?
2025-06-28 23:15:38.011 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:133 processed and saved successfully.
2025-06-28 23:15:38.012 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the plural of mouse?"
2025-06-28 23:15:38.012 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the plural of mouse?
2025-06-28 23:15:38.012 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the plural of mouse?
2025-06-28 23:15:38.622 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the plural of mouse?, Answer: Mice.

2025-06-28 23:15:38.983 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the plural of mouse?
2025-06-28 23:15:38.983 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:134 processed and saved successfully.
2025-06-28 23:15:42.686 [Thread-8] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:42.702 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:42.795 [Thread-12] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:42.795 [Thread-11] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:42.857 [Thread-15] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:42.872 [Thread-16] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.133 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.164 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.211 [Thread-9] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.227 [Thread-10] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.351 [Thread-14] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.429 [Thread-13] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:43.491 [Thread-17] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:15:52.758 [Thread-8] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:52.773 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:52.881 [Thread-12] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:52.881 [Thread-11] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:52.960 [Thread-15] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:52.976 [Thread-16] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.227 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.259 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.305 [Thread-9] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.321 [Thread-10] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.444 [Thread-14] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.523 [Thread-13] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:15:53.585 [Thread-17] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:16:02.863 [Thread-8] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:02.864 [Thread-8] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:02.879 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:02.880 [Thread-7] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:02.987 [Thread-12] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:02.987 [Thread-11] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:02.988 [Thread-12] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:02.988 [Thread-11] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.065 [Thread-15] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.065 [Thread-15] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.081 [Thread-16] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.081 [Thread-16] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.313 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.314 [Thread-6] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.359 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.359 [Thread-5] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.406 [Thread-9] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.406 [Thread-9] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.421 [Thread-10] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.422 [Thread-10] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.545 [Thread-14] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.545 [Thread-14] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.622 [Thread-13] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.623 [Thread-13] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:16:03.684 [Thread-17] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:16:03.684 [Thread-17] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:18:38.339 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of France?"
2025-06-28 23:18:38.342 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of France?
2025-06-28 23:18:38.342 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of France?
2025-06-28 23:18:39.153 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of France?, Answer: Paris.

2025-06-28 23:18:39.569 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of France?
2025-06-28 23:18:39.570 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:135 processed and saved successfully.
2025-06-28 23:18:39.621 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 2+2?"
2025-06-28 23:18:39.622 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 2+2?
2025-06-28 23:18:39.622 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 2+2?
2025-06-28 23:18:40.591 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 2+2?, Answer: This is not a history question. 2+2=4

2025-06-28 23:18:41.029 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 2+2?
2025-06-28 23:18:41.029 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:136 processed and saved successfully.
2025-06-28 23:18:41.043 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What color is the sky?"
2025-06-28 23:18:41.044 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What color is the sky?
2025-06-28 23:18:41.044 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What color is the sky?
2025-06-28 23:18:41.604 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What color is the sky?, Answer: Blue.

2025-06-28 23:18:41.951 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What color is the sky?
2025-06-28 23:18:41.952 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:137 processed and saved successfully.
2025-06-28 23:18:41.963 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is H2O?"
2025-06-28 23:18:41.964 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is H2O?
2025-06-28 23:18:41.964 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is H2O?
2025-06-28 23:18:42.668 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is H2O?, Answer: Water's chemical formula.

2025-06-28 23:18:43.079 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is H2O?
2025-06-28 23:18:43.079 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:138 processed and saved successfully.
2025-06-28 23:18:43.096 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which planet is red?"
2025-06-28 23:18:43.096 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet is red?
2025-06-28 23:18:43.096 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which planet is red?
2025-06-28 23:18:43.783 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which planet is red?, Answer: Mars

2025-06-28 23:18:44.119 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which planet is red?
2025-06-28 23:18:44.119 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:139 processed and saved successfully.
2025-06-28 23:18:44.132 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of hot?"
2025-06-28 23:18:44.132 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of hot?
2025-06-28 23:18:44.132 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of hot?
2025-06-28 23:18:44.757 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the opposite of hot?, Answer: Cold.

2025-06-28 23:18:45.141 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of hot?
2025-06-28 23:18:45.141 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:140 processed and saved successfully.
2025-06-28 23:18:45.141 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the square root of 9?"
2025-06-28 23:18:45.141 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the square root of 9?
2025-06-28 23:18:45.141 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the square root of 9?
2025-06-28 23:18:45.710 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the square root of 9?, Answer: 3

2025-06-28 23:18:46.106 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the square root of 9?
2025-06-28 23:18:46.111 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:141 processed and saved successfully.
2025-06-28 23:18:46.121 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What gas do we breathe?"
2025-06-28 23:18:46.122 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What gas do we breathe?
2025-06-28 23:18:46.122 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What gas do we breathe?
2025-06-28 23:18:46.775 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What gas do we breathe?, Answer: Oxygen.

2025-06-28 23:18:47.091 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What gas do we breathe?
2025-06-28 23:18:47.091 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:142 processed and saved successfully.
2025-06-28 23:18:47.102 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the freezing point of water?"
2025-06-28 23:18:47.102 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the freezing point of water?
2025-06-28 23:18:47.102 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the freezing point of water?
2025-06-28 23:18:47.828 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the freezing point of water?, Answer: 32 degrees Fahrenheit or 0 degrees Celsius.

2025-06-28 23:18:48.187 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the freezing point of water?
2025-06-28 23:18:48.193 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:143 processed and saved successfully.
2025-06-28 23:18:48.193 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the largest ocean?"
2025-06-28 23:18:48.193 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the largest ocean?
2025-06-28 23:18:48.193 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the largest ocean?
2025-06-28 23:18:48.771 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the largest ocean?, Answer: Pacific Ocean.

2025-06-28 23:18:49.144 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the largest ocean?
2025-06-28 23:18:49.144 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:144 processed and saved successfully.
2025-06-28 23:18:49.160 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the currency of Japan?"
2025-06-28 23:18:49.160 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the currency of Japan?
2025-06-28 23:18:49.160 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the currency of Japan?
2025-06-28 23:18:49.781 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the currency of Japan?, Answer: Japanese Yen

2025-06-28 23:18:50.187 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the currency of Japan?
2025-06-28 23:18:50.192 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:145 processed and saved successfully.
2025-06-28 23:18:50.192 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who painted the Mona Lisa?"
2025-06-28 23:18:50.192 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who painted the Mona Lisa?
2025-06-28 23:18:50.192 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who painted the Mona Lisa?
2025-06-28 23:18:50.811 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Who painted the Mona Lisa?, Answer: Leonardo da Vinci.

2025-06-28 23:18:51.168 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who painted the Mona Lisa?
2025-06-28 23:18:51.168 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:146 processed and saved successfully.
2025-06-28 23:18:51.180 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the speed of light?"
2025-06-28 23:18:51.180 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the speed of light?
2025-06-28 23:18:51.180 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the speed of light?
2025-06-28 23:18:51.855 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the speed of light?, Answer: Approximately 299,792,458 meters per second.

2025-06-28 23:18:52.275 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the speed of light?
2025-06-28 23:18:52.275 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:147 processed and saved successfully.
2025-06-28 23:18:52.275 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What language is spoken in Brazil?"
2025-06-28 23:18:52.275 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What language is spoken in Brazil?
2025-06-28 23:18:52.275 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What language is spoken in Brazil?
2025-06-28 23:18:52.916 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What language is spoken in Brazil?, Answer: Portuguese.

2025-06-28 23:18:53.307 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What language is spoken in Brazil?
2025-06-28 23:18:53.307 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:148 processed and saved successfully.
2025-06-28 23:18:53.320 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 5*5?"
2025-06-28 23:18:53.320 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 5*5?
2025-06-28 23:18:53.320 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 5*5?
2025-06-28 23:18:54.189 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 5*5?, Answer: This question is not related to history. 5*5 = 25

2025-06-28 23:18:54.511 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 5*5?
2025-06-28 23:18:54.515 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:149 processed and saved successfully.
2025-06-28 23:18:54.515 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What planet do we live on?"
2025-06-28 23:18:54.515 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet do we live on?
2025-06-28 23:18:54.515 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What planet do we live on?
2025-06-28 23:18:55.172 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What planet do we live on?, Answer: Earth.

2025-06-28 23:18:55.513 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What planet do we live on?
2025-06-28 23:18:55.513 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:150 processed and saved successfully.
2025-06-28 23:18:55.513 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of India?"
2025-06-28 23:18:55.513 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of India?
2025-06-28 23:18:55.513 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of India?
2025-06-28 23:18:55.827 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 7 seconds
2025-06-28 23:18:55.832 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the capital of India?
2025-06-28 23:18:55.832 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:18:55.836 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 7 seconds...
2025-06-28 23:18:55.836 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:18:55.852 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:151, Question: What is the capital of India?, Offset: 13
2025-06-28 23:18:55.854 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the capital of India?"
2025-06-28 23:18:55.855 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of India?
2025-06-28 23:18:55.855 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the capital of India?
2025-06-28 23:18:56.508 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the capital of India?, Answer: New Delhi

2025-06-28 23:18:56.874 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of India?
2025-06-28 23:18:56.874 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:151 processed and saved successfully.
2025-06-28 23:19:02.913 [Thread-18] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:19:02.914 [Thread-18] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:19:02.916 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 10 divided by 2?"
2025-06-28 23:19:02.916 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 10 divided by 2?
2025-06-28 23:19:02.916 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 10 divided by 2?
2025-06-28 23:19:03.657 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 10 divided by 2?, Answer: 5

2025-06-28 23:19:04.167 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 10 divided by 2?
2025-06-28 23:19:04.167 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:152 processed and saved successfully.
2025-06-28 23:19:04.167 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the chemical symbol for gold?"
2025-06-28 23:19:04.167 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for gold?
2025-06-28 23:19:04.167 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the chemical symbol for gold?
2025-06-28 23:19:04.536 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 59 seconds
2025-06-28 23:19:04.536 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the chemical symbol for gold?
2025-06-28 23:19:04.536 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:19:04.539 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 59 seconds...
2025-06-28 23:19:04.539 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:19:04.541 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who wrote '1984'?"
2025-06-28 23:19:04.541 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who wrote '1984'?
2025-06-28 23:19:04.541 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who wrote '1984'?
2025-06-28 23:19:04.553 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:153, Question: What is the chemical symbol for gold?, Offset: 14
2025-06-28 23:19:04.555 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the chemical symbol for gold?"
2025-06-28 23:19:04.555 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for gold?
2025-06-28 23:19:04.555 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the chemical symbol for gold?
2025-06-28 23:19:04.846 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 58 seconds
2025-06-28 23:19:04.846 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Who wrote '1984'?
2025-06-28 23:19:04.846 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:19:04.846 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 58 seconds...
2025-06-28 23:19:04.846 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:19:04.863 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:154, Question: Who wrote '1984'?, Offset: 15
2025-06-28 23:19:06.111 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the chemical symbol for gold?, Answer: Au

2025-06-28 23:19:06.466 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the chemical symbol for gold?
2025-06-28 23:19:06.466 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:153 processed and saved successfully.
2025-06-28 23:19:06.477 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Who wrote '1984'?"
2025-06-28 23:19:06.478 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who wrote '1984'?
2025-06-28 23:19:06.478 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Who wrote '1984'?
2025-06-28 23:19:07.090 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Who wrote '1984'?, Answer: George Orwell

2025-06-28 23:19:07.465 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who wrote '1984'?
2025-06-28 23:19:07.466 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:154 processed and saved successfully.
2025-06-28 23:19:12.941 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:19:13.611 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:19:23.040 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:19:23.683 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:19:33.146 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:19:33.758 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:19:43.249 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:19:43.847 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:19:53.352 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:19:54.174 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:04.062 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:20:04.063 [Thread-20] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:20:04.066 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the smallest prime number?"
2025-06-28 23:20:04.066 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the smallest prime number?
2025-06-28 23:20:04.066 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the smallest prime number?
2025-06-28 23:20:04.285 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:20:04.287 [Thread-19] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:20:04.696 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the smallest prime number?, Answer: 2

2025-06-28 23:20:05.037 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the smallest prime number?
2025-06-28 23:20:05.037 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:155 processed and saved successfully.
2025-06-28 23:20:05.037 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Italy?"
2025-06-28 23:20:05.037 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Italy?
2025-06-28 23:20:05.037 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Italy?
2025-06-28 23:20:05.572 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of Italy?, Answer: Rome

2025-06-28 23:20:05.910 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Italy?
2025-06-28 23:20:05.910 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:156 processed and saved successfully.
2025-06-28 23:20:05.910 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many continents are there?"
2025-06-28 23:20:05.911 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many continents are there?
2025-06-28 23:20:05.911 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many continents are there?
2025-06-28 23:20:06.809 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many continents are there?, Answer: Seven.

2025-06-28 23:20:07.158 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many continents are there?
2025-06-28 23:20:07.158 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:157 processed and saved successfully.
2025-06-28 23:20:07.158 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What shape has three sides?"
2025-06-28 23:20:07.158 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has three sides?
2025-06-28 23:20:07.158 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What shape has three sides?
2025-06-28 23:20:07.830 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What shape has three sides?, Answer: Triangle.

2025-06-28 23:20:08.185 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What shape has three sides?
2025-06-28 23:20:08.185 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:158 processed and saved successfully.
2025-06-28 23:20:08.185 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Germany?"
2025-06-28 23:20:08.185 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Germany?
2025-06-28 23:20:08.185 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Germany?
2025-06-28 23:20:09.017 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of Germany?, Answer: Berlin.

2025-06-28 23:20:09.364 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Germany?
2025-06-28 23:20:09.364 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:159 processed and saved successfully.
2025-06-28 23:20:09.364 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the national sport of Canada?"
2025-06-28 23:20:09.365 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the national sport of Canada?
2025-06-28 23:20:09.365 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the national sport of Canada?
2025-06-28 23:20:10.036 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the national sport of Canada?, Answer: Ice hockey and lacrosse.

2025-06-28 23:20:10.400 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the national sport of Canada?
2025-06-28 23:20:10.400 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:160 processed and saved successfully.
2025-06-28 23:20:10.400 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is water made of?"
2025-06-28 23:20:10.400 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is water made of?
2025-06-28 23:20:10.400 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is water made of?
2025-06-28 23:20:11.012 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is water made of?, Answer: Hydrogen and oxygen.

2025-06-28 23:20:11.355 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is water made of?
2025-06-28 23:20:11.355 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:161 processed and saved successfully.
2025-06-28 23:20:11.355 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many days in a week?"
2025-06-28 23:20:11.355 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many days in a week?
2025-06-28 23:20:11.355 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many days in a week?
2025-06-28 23:20:11.990 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many days in a week?, Answer: Seven

2025-06-28 23:20:12.340 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many days in a week?
2025-06-28 23:20:12.340 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:162 processed and saved successfully.
2025-06-28 23:20:12.340 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of big?"
2025-06-28 23:20:12.340 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of big?
2025-06-28 23:20:12.340 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of big?
2025-06-28 23:20:12.935 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the opposite of big?, Answer: Small.

2025-06-28 23:20:13.267 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of big?
2025-06-28 23:20:13.267 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:163 processed and saved successfully.
2025-06-28 23:20:13.268 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the plural of mouse?"
2025-06-28 23:20:13.268 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the plural of mouse?
2025-06-28 23:20:13.268 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the plural of mouse?
2025-06-28 23:20:13.801 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the plural of mouse?, Answer: Mice.

2025-06-28 23:20:14.166 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the plural of mouse?
2025-06-28 23:20:14.166 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:164 processed and saved successfully.
2025-06-28 23:20:14.166 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which animal barks?"
2025-06-28 23:20:14.166 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which animal barks?
2025-06-28 23:20:14.166 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which animal barks?
2025-06-28 23:20:14.951 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which animal barks?, Answer: Dogs.

2025-06-28 23:20:15.346 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which animal barks?
2025-06-28 23:20:15.346 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:165 processed and saved successfully.
2025-06-28 23:20:15.346 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many hours in a day?"
2025-06-28 23:20:15.346 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many hours in a day?
2025-06-28 23:20:15.346 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many hours in a day?
2025-06-28 23:20:15.905 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many hours in a day?, Answer: 24 hours.

2025-06-28 23:20:16.282 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many hours in a day?
2025-06-28 23:20:16.282 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:166 processed and saved successfully.
2025-06-28 23:20:16.326 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What do bees produce?"
2025-06-28 23:20:16.326 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What do bees produce?
2025-06-28 23:20:16.326 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What do bees produce?
2025-06-28 23:20:17.029 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What do bees produce?, Answer: Honey and beeswax.

2025-06-28 23:20:17.388 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What do bees produce?
2025-06-28 23:20:17.388 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:167 processed and saved successfully.
2025-06-28 23:20:17.388 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Egypt?"
2025-06-28 23:20:17.388 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Egypt?
2025-06-28 23:20:17.388 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Egypt?
2025-06-28 23:20:17.966 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of Egypt?, Answer: Cairo.

2025-06-28 23:20:18.311 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Egypt?
2025-06-28 23:20:18.311 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:168 processed and saved successfully.
2025-06-28 23:20:18.311 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What organ pumps blood?"
2025-06-28 23:20:18.311 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What organ pumps blood?
2025-06-28 23:20:18.311 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What organ pumps blood?
2025-06-28 23:20:18.948 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What organ pumps blood?, Answer: Heart

2025-06-28 23:20:19.327 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What organ pumps blood?
2025-06-28 23:20:19.327 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:169 processed and saved successfully.
2025-06-28 23:20:19.327 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the color of bananas?"
2025-06-28 23:20:19.327 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of bananas?
2025-06-28 23:20:19.327 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the color of bananas?
2025-06-28 23:20:20.058 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the color of bananas?, Answer: Yellow.

2025-06-28 23:20:20.451 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the color of bananas?
2025-06-28 23:20:20.451 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:170 processed and saved successfully.
2025-06-28 23:20:20.452 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the tallest mountain?"
2025-06-28 23:20:20.452 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the tallest mountain?
2025-06-28 23:20:20.452 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the tallest mountain?
2025-06-28 23:20:20.767 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 42 seconds
2025-06-28 23:20:20.767 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the tallest mountain?
2025-06-28 23:20:20.768 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:20.768 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 42 seconds...
2025-06-28 23:20:20.768 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:20.769 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the hottest planet?"
2025-06-28 23:20:20.769 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the hottest planet?
2025-06-28 23:20:20.769 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the hottest planet?
2025-06-28 23:20:20.774 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:171, Question: What is the tallest mountain?, Offset: 16
2025-06-28 23:20:20.776 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the tallest mountain?"
2025-06-28 23:20:20.777 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the tallest mountain?
2025-06-28 23:20:20.777 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the tallest mountain?
2025-06-28 23:20:21.076 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 42 seconds
2025-06-28 23:20:21.077 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the hottest planet?
2025-06-28 23:20:21.078 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:21.081 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 42 seconds...
2025-06-28 23:20:21.084 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:21.088 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 12 x 12?"
2025-06-28 23:20:21.089 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 12 x 12?
2025-06-28 23:20:21.089 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 12 x 12?
2025-06-28 23:20:21.097 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:172, Question: What is the hottest planet?, Offset: 17
2025-06-28 23:20:22.408 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the tallest mountain?, Answer: Mount Everest.

2025-06-28 23:20:22.731 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 12 x 12?, Answer: 144

2025-06-28 23:20:22.782 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:20:22.881 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the tallest mountain?
2025-06-28 23:20:22.881 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:171 processed and saved successfully.
2025-06-28 23:20:22.893 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the hottest planet?"
2025-06-28 23:20:22.893 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the hottest planet?
2025-06-28 23:20:22.893 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the hottest planet?
2025-06-28 23:20:23.109 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:20:23.145 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 12 x 12?
2025-06-28 23:20:23.145 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:173 processed and saved successfully.
2025-06-28 23:20:23.145 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What does DNA stand for?"
2025-06-28 23:20:23.145 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What does DNA stand for?
2025-06-28 23:20:23.145 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What does DNA stand for?
2025-06-28 23:20:23.448 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 40 seconds
2025-06-28 23:20:23.448 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What does DNA stand for?
2025-06-28 23:20:23.448 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:23.448 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 40 seconds...
2025-06-28 23:20:23.448 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:23.448 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of Spain?"
2025-06-28 23:20:23.448 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Spain?
2025-06-28 23:20:23.448 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of Spain?
2025-06-28 23:20:23.452 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:20:23.457 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:174, Question: What does DNA stand for?, Offset: 18
2025-06-28 23:20:23.593 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the hottest planet?, Answer: Venus.

2025-06-28 23:20:23.959 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the hottest planet?
2025-06-28 23:20:23.959 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:172 processed and saved successfully.
2025-06-28 23:20:23.972 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What does DNA stand for?"
2025-06-28 23:20:23.972 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What does DNA stand for?
2025-06-28 23:20:23.972 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What does DNA stand for?
2025-06-28 23:20:24.769 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What does DNA stand for?, Answer: Deoxyribonucleic acid.

2025-06-28 23:20:24.771 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 38 seconds
2025-06-28 23:20:24.773 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the capital of Spain?
2025-06-28 23:20:24.773 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:24.775 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 38 seconds...
2025-06-28 23:20:24.776 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:24.779 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What planet is closest to the sun?"
2025-06-28 23:20:24.781 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet is closest to the sun?
2025-06-28 23:20:24.782 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What planet is closest to the sun?
2025-06-28 23:20:24.791 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:175, Question: What is the capital of Spain?, Offset: 19
2025-06-28 23:20:25.221 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What does DNA stand for?
2025-06-28 23:20:25.221 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:174 processed and saved successfully.
2025-06-28 23:20:25.238 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the capital of Spain?"
2025-06-28 23:20:25.238 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of Spain?
2025-06-28 23:20:25.238 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the capital of Spain?
2025-06-28 23:20:25.577 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 37 seconds
2025-06-28 23:20:25.577 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What planet is closest to the sun?
2025-06-28 23:20:25.577 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:25.580 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 37 seconds...
2025-06-28 23:20:25.580 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:25.580 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the boiling point of water?"
2025-06-28 23:20:25.580 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the boiling point of water?
2025-06-28 23:20:25.580 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the boiling point of water?
2025-06-28 23:20:25.584 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:176, Question: What planet is closest to the sun?, Offset: 20
2025-06-28 23:20:25.846 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the capital of Spain?, Answer: Madrid

2025-06-28 23:20:26.192 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of Spain?
2025-06-28 23:20:26.192 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:175 processed and saved successfully.
2025-06-28 23:20:26.202 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What planet is closest to the sun?"
2025-06-28 23:20:26.202 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet is closest to the sun?
2025-06-28 23:20:26.202 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What planet is closest to the sun?
2025-06-28 23:20:26.359 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 37 seconds
2025-06-28 23:20:26.359 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the boiling point of water?
2025-06-28 23:20:26.359 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:26.359 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 37 seconds...
2025-06-28 23:20:26.359 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:26.359 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Who is the Greek god of war?"
2025-06-28 23:20:26.359 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who is the Greek god of war?
2025-06-28 23:20:26.364 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Who is the Greek god of war?
2025-06-28 23:20:26.368 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:177, Question: What is the boiling point of water?, Offset: 21
2025-06-28 23:20:27.112 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What planet is closest to the sun?, Answer: Mercury

2025-06-28 23:20:27.165 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 36 seconds
2025-06-28 23:20:27.165 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Who is the Greek god of war?
2025-06-28 23:20:27.165 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:27.165 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 36 seconds...
2025-06-28 23:20:27.165 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:27.165 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which ocean is the largest?"
2025-06-28 23:20:27.165 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which ocean is the largest?
2025-06-28 23:20:27.165 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which ocean is the largest?
2025-06-28 23:20:27.171 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:178, Question: Who is the Greek god of war?, Offset: 22
2025-06-28 23:20:27.416 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What planet is closest to the sun?
2025-06-28 23:20:27.416 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:176 processed and saved successfully.
2025-06-28 23:20:27.435 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the boiling point of water?"
2025-06-28 23:20:27.435 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the boiling point of water?
2025-06-28 23:20:27.435 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the boiling point of water?
2025-06-28 23:20:27.747 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 35 seconds
2025-06-28 23:20:27.747 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Which ocean is the largest?
2025-06-28 23:20:27.747 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:27.747 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 35 seconds...
2025-06-28 23:20:27.747 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:27.747 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 3 cubed?"
2025-06-28 23:20:27.747 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 3 cubed?
2025-06-28 23:20:27.747 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 3 cubed?
2025-06-28 23:20:27.753 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:179, Question: Which ocean is the largest?, Offset: 23
2025-06-28 23:20:28.207 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the boiling point of water?, Answer: 100 degrees Celsius.

2025-06-28 23:20:28.594 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the boiling point of water?
2025-06-28 23:20:28.595 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:177 processed and saved successfully.
2025-06-28 23:20:28.601 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Who is the Greek god of war?"
2025-06-28 23:20:28.601 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Who is the Greek god of war?
2025-06-28 23:20:28.601 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Who is the Greek god of war?
2025-06-28 23:20:28.770 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 34 seconds
2025-06-28 23:20:28.770 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 3 cubed?
2025-06-28 23:20:28.770 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:28.770 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 34 seconds...
2025-06-28 23:20:28.770 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:28.775 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What’s the capital of Canada?"
2025-06-28 23:20:28.781 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Canada?
2025-06-28 23:20:28.781 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What’s the capital of Canada?
2025-06-28 23:20:28.784 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:180, Question: What is 3 cubed?, Offset: 24
2025-06-28 23:20:29.313 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 34 seconds
2025-06-28 23:20:29.316 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What’s the capital of Canada?
2025-06-28 23:20:29.316 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:29.318 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 34 seconds...
2025-06-28 23:20:29.318 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:29.321 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 100 in Roman numerals?"
2025-06-28 23:20:29.322 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 100 in Roman numerals?
2025-06-28 23:20:29.322 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 100 in Roman numerals?
2025-06-28 23:20:29.327 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:181, Question: What’s the capital of Canada?, Offset: 25
2025-06-28 23:20:29.397 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Who is the Greek god of war?, Answer: Ares

2025-06-28 23:20:29.797 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Who is the Greek god of war?
2025-06-28 23:20:29.797 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:178 processed and saved successfully.
2025-06-28 23:20:29.815 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Which ocean is the largest?"
2025-06-28 23:20:29.815 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which ocean is the largest?
2025-06-28 23:20:29.815 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Which ocean is the largest?
2025-06-28 23:20:30.366 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 33 seconds
2025-06-28 23:20:30.369 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 100 in Roman numerals?
2025-06-28 23:20:30.371 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:30.373 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 33 seconds...
2025-06-28 23:20:30.375 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:30.376 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the square root of 64?"
2025-06-28 23:20:30.376 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the square root of 64?
2025-06-28 23:20:30.376 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the square root of 64?
2025-06-28 23:20:30.398 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:182, Question: What is 100 in Roman numerals?, Offset: 26
2025-06-28 23:20:30.437 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Which ocean is the largest?, Answer: Pacific Ocean

2025-06-28 23:20:30.796 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which ocean is the largest?
2025-06-28 23:20:30.796 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:179 processed and saved successfully.
2025-06-28 23:20:30.813 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 3 cubed?"
2025-06-28 23:20:30.813 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 3 cubed?
2025-06-28 23:20:30.813 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 3 cubed?
2025-06-28 23:20:30.867 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 32 seconds
2025-06-28 23:20:30.867 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the square root of 64?
2025-06-28 23:20:30.872 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:30.872 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 32 seconds...
2025-06-28 23:20:30.872 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:30.874 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a baby dog called?"
2025-06-28 23:20:30.874 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a baby dog called?
2025-06-28 23:20:30.874 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a baby dog called?
2025-06-28 23:20:30.879 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:183, Question: What is the square root of 64?, Offset: 27
2025-06-28 23:20:31.778 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 3 cubed?, Answer: This is not a history question. 3 cubed (3³) is 27.

2025-06-28 23:20:31.928 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 31 seconds
2025-06-28 23:20:31.928 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is a baby dog called?
2025-06-28 23:20:31.928 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:31.928 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 31 seconds...
2025-06-28 23:20:31.928 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:31.928 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a synonym for quick?"
2025-06-28 23:20:31.928 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a synonym for quick?
2025-06-28 23:20:31.928 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a synonym for quick?
2025-06-28 23:20:31.937 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:184, Question: What is a baby dog called?, Offset: 28
2025-06-28 23:20:32.147 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 3 cubed?
2025-06-28 23:20:32.147 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:180 processed and saved successfully.
2025-06-28 23:20:32.147 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What’s the capital of Canada?"
2025-06-28 23:20:32.147 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Canada?
2025-06-28 23:20:32.147 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What’s the capital of Canada?
2025-06-28 23:20:32.386 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 31 seconds
2025-06-28 23:20:32.390 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is a synonym for quick?
2025-06-28 23:20:32.390 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:32.390 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 31 seconds...
2025-06-28 23:20:32.390 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:32.390 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of old?"
2025-06-28 23:20:32.390 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of old?
2025-06-28 23:20:32.390 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of old?
2025-06-28 23:20:32.398 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:185, Question: What is a synonym for quick?, Offset: 29
2025-06-28 23:20:32.680 [Thread-25] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.765 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What’s the capital of Canada?, Answer: Ottawa.

2025-06-28 23:20:32.796 [Thread-28] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.796 [Thread-29] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.858 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.858 [Thread-24] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.890 [Thread-32] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:32.936 [Thread-33] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.106 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What’s the capital of Canada?
2025-06-28 23:20:33.106 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:181 processed and saved successfully.
2025-06-28 23:20:33.118 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 100 in Roman numerals?"
2025-06-28 23:20:33.119 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 100 in Roman numerals?
2025-06-28 23:20:33.119 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 100 in Roman numerals?
2025-06-28 23:20:33.188 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.221 [Thread-27] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.369 [Thread-30] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.401 [Thread-34] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.418 [Thread-26] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.433 [Thread-31] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.530 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.536 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 30 seconds
2025-06-28 23:20:33.542 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the opposite of old?
2025-06-28 23:20:33.542 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:33.542 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 30 seconds...
2025-06-28 23:20:33.542 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:33.544 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What’s the capital of Russia?"
2025-06-28 23:20:33.544 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Russia?
2025-06-28 23:20:33.545 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What’s the capital of Russia?
2025-06-28 23:20:33.546 [Thread-35] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:20:33.554 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:186, Question: What is the opposite of old?, Offset: 30
2025-06-28 23:20:33.946 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 29 seconds
2025-06-28 23:20:33.946 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What’s the capital of Russia?
2025-06-28 23:20:33.946 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:33.946 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 29 seconds...
2025-06-28 23:20:33.946 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:33.950 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many legs does a spider have?"
2025-06-28 23:20:33.950 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:33.950 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:33.957 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:187, Question: What’s the capital of Russia?, Offset: 31
2025-06-28 23:20:34.029 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 100 in Roman numerals?, Answer: C

2025-06-28 23:20:34.381 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 100 in Roman numerals?
2025-06-28 23:20:34.381 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:182 processed and saved successfully.
2025-06-28 23:20:34.381 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the square root of 64?"
2025-06-28 23:20:34.381 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the square root of 64?
2025-06-28 23:20:34.381 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the square root of 64?
2025-06-28 23:20:35.123 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 28 seconds
2025-06-28 23:20:35.125 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many legs does a spider have?
2025-06-28 23:20:35.125 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:35.128 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 28 seconds...
2025-06-28 23:20:35.128 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:35.133 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the color of emerald?"
2025-06-28 23:20:35.133 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:35.133 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the color of emerald?
2025-06-28 23:20:35.135 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the square root of 64?, Answer: This is a math question, not a history question. The square root of 64 is 8.

2025-06-28 23:20:35.140 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:188, Question: How many legs does a spider have?, Offset: 32
2025-06-28 23:20:35.456 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the square root of 64?
2025-06-28 23:20:35.456 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:183 processed and saved successfully.
2025-06-28 23:20:35.466 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a baby dog called?"
2025-06-28 23:20:35.467 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a baby dog called?
2025-06-28 23:20:35.467 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a baby dog called?
2025-06-28 23:20:35.557 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 27 seconds
2025-06-28 23:20:35.557 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the color of emerald?
2025-06-28 23:20:35.557 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:35.557 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 27 seconds...
2025-06-28 23:20:35.557 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:35.557 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What shape has four equal sides?"
2025-06-28 23:20:35.557 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:35.557 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:35.565 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:189, Question: What is the color of emerald?, Offset: 33
2025-06-28 23:20:36.295 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is a baby dog called?, Answer: Puppy.

2025-06-28 23:20:36.656 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a baby dog called?
2025-06-28 23:20:36.656 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:184 processed and saved successfully.
2025-06-28 23:20:36.656 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a synonym for quick?"
2025-06-28 23:20:36.656 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a synonym for quick?
2025-06-28 23:20:36.656 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a synonym for quick?
2025-06-28 23:20:36.713 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 26 seconds
2025-06-28 23:20:36.714 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What shape has four equal sides?
2025-06-28 23:20:36.714 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:36.715 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 26 seconds...
2025-06-28 23:20:36.715 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:36.716 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a group of lions called?"
2025-06-28 23:20:36.716 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a group of lions called?
2025-06-28 23:20:36.716 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a group of lions called?
2025-06-28 23:20:36.723 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:190, Question: What shape has four equal sides?, Offset: 34
2025-06-28 23:20:37.114 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 26 seconds
2025-06-28 23:20:37.114 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is a group of lions called?
2025-06-28 23:20:37.114 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:37.116 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 26 seconds...
2025-06-28 23:20:37.116 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:37.116 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the national animal of USA?"
2025-06-28 23:20:37.117 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the national animal of USA?
2025-06-28 23:20:37.117 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the national animal of USA?
2025-06-28 23:20:37.129 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:191, Question: What is a group of lions called?, Offset: 35
2025-06-28 23:20:37.295 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is a synonym for quick?, Answer: Rapid.

2025-06-28 23:20:37.717 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a synonym for quick?
2025-06-28 23:20:37.717 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:185 processed and saved successfully.
2025-06-28 23:20:37.727 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the opposite of old?"
2025-06-28 23:20:37.727 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of old?
2025-06-28 23:20:37.727 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the opposite of old?
2025-06-28 23:20:38.275 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 25 seconds
2025-06-28 23:20:38.282 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the national animal of USA?
2025-06-28 23:20:38.282 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:38.284 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 25 seconds...
2025-06-28 23:20:38.284 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:38.284 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many seconds in a minute?"
2025-06-28 23:20:38.284 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many seconds in a minute?
2025-06-28 23:20:38.284 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many seconds in a minute?
2025-06-28 23:20:38.294 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:192, Question: What is the national animal of USA?, Offset: 36
2025-06-28 23:20:38.595 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the opposite of old?, Answer: New.

2025-06-28 23:20:38.713 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 24 seconds
2025-06-28 23:20:38.714 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many seconds in a minute?
2025-06-28 23:20:38.714 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:38.714 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 24 seconds...
2025-06-28 23:20:38.714 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:38.716 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which planet has rings?"
2025-06-28 23:20:38.716 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet has rings?
2025-06-28 23:20:38.717 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which planet has rings?
2025-06-28 23:20:38.720 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:193, Question: How many seconds in a minute?, Offset: 37
2025-06-28 23:20:38.964 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of old?
2025-06-28 23:20:38.964 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:186 processed and saved successfully.
2025-06-28 23:20:38.964 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What’s the capital of Russia?"
2025-06-28 23:20:38.965 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Russia?
2025-06-28 23:20:38.965 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What’s the capital of Russia?
2025-06-28 23:20:39.650 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which planet has rings?, Answer: Saturn

2025-06-28 23:20:39.988 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which planet has rings?
2025-06-28 23:20:39.990 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:194 processed and saved successfully.
2025-06-28 23:20:39.990 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 0 divided by 1?"
2025-06-28 23:20:39.990 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 0 divided by 1?
2025-06-28 23:20:39.990 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 0 divided by 1?
2025-06-28 23:20:40.175 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What’s the capital of Russia?, Answer: Moscow.

2025-06-28 23:20:40.552 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What’s the capital of Russia?
2025-06-28 23:20:40.553 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:187 processed and saved successfully.
2025-06-28 23:20:40.553 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many legs does a spider have?"
2025-06-28 23:20:40.553 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:40.553 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:40.588 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 0 divided by 1?, Answer: 0

2025-06-28 23:20:40.956 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 0 divided by 1?
2025-06-28 23:20:40.958 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:195 processed and saved successfully.
2025-06-28 23:20:40.958 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What’s the capital of Australia?"
2025-06-28 23:20:40.960 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Australia?
2025-06-28 23:20:40.960 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What’s the capital of Australia?
2025-06-28 23:20:41.078 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: How many legs does a spider have?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:41.127 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:41.175 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:41.182 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many legs does a spider have?"
2025-06-28 23:20:41.182 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:41.183 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:41.943 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What’s the capital of Australia?, Answer: Canberra

2025-06-28 23:20:42.149 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: How many legs does a spider have?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:42.155 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:42.185 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:42.206 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many legs does a spider have?"
2025-06-28 23:20:42.206 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:42.206 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:42.294 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What’s the capital of Australia?
2025-06-28 23:20:42.294 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:196 processed and saved successfully.
2025-06-28 23:20:42.294 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the largest mammal?"
2025-06-28 23:20:42.294 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the largest mammal?
2025-06-28 23:20:42.294 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the largest mammal?
2025-06-28 23:20:42.544 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: How many legs does a spider have?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:42.545 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:42.563 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:42.610 [Thread-38] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.758 [Thread-42] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.786 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many legs does a spider have?"
2025-06-28 23:20:42.787 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:42.787 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:42.811 [Thread-25] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.813 [Thread-39] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.849 [Thread-29] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.849 [Thread-28] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.912 [Thread-24] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.912 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.943 [Thread-32] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:42.996 [Thread-33] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.044 [Thread-36] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.148 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the largest mammal?, Answer: Blue whale.

2025-06-28 23:20:43.188 [Thread-40] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.202 [Thread-37] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.265 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.312 [Thread-27] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.345 [Thread-41] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.444 [Thread-30] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.492 [Thread-34] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.508 [Thread-26] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.523 [Thread-31] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.539 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the largest mammal?
2025-06-28 23:20:43.543 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:197 processed and saved successfully.
2025-06-28 23:20:43.543 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the color of coal?"
2025-06-28 23:20:43.543 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of coal?
2025-06-28 23:20:43.543 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the color of coal?
2025-06-28 23:20:43.603 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.620 [Thread-35] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:20:43.806 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: How many legs does a spider have?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:43.808 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:43.858 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:43.868 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many legs does a spider have?"
2025-06-28 23:20:43.869 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many legs does a spider have?
2025-06-28 23:20:43.869 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many legs does a spider have?
2025-06-28 23:20:44.239 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the color of coal?, Answer: Black.

2025-06-28 23:20:44.567 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the color of coal?
2025-06-28 23:20:44.569 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:198 processed and saved successfully.
2025-06-28 23:20:44.569 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 1+1?"
2025-06-28 23:20:44.569 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 1+1?
2025-06-28 23:20:44.570 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 1+1?
2025-06-28 23:20:44.727 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many legs does a spider have?, Answer: Eight.

2025-06-28 23:20:45.056 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many legs does a spider have?
2025-06-28 23:20:45.056 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:188 processed and saved successfully.
2025-06-28 23:20:45.059 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:45.059 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:45.059 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:45.422 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:45.426 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:45.457 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:45.462 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:45.462 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:45.462 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:45.516 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 1+1?, Answer: Two.

2025-06-28 23:20:45.844 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 1+1?
2025-06-28 23:20:45.844 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:199 processed and saved successfully.
2025-06-28 23:20:45.844 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many letters in the alphabet?"
2025-06-28 23:20:45.844 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many letters in the alphabet?
2025-06-28 23:20:45.844 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many letters in the alphabet?
2025-06-28 23:20:46.421 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many letters in the alphabet?, Answer: 26

2025-06-28 23:20:46.640 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:46.641 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:46.656 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:46.664 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:46.664 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:46.664 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:46.753 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many letters in the alphabet?
2025-06-28 23:20:46.753 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:200 processed and saved successfully.
2025-06-28 23:20:46.753 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the moon made of?"
2025-06-28 23:20:46.753 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the moon made of?
2025-06-28 23:20:46.753 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the moon made of?
2025-06-28 23:20:47.436 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the moon made of?, Answer: The moon is made of silicate rocks, metal, and some water ice.

2025-06-28 23:20:47.441 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:47.444 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:47.462 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:47.473 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:47.475 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:47.476 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:47.774 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the moon made of?
2025-06-28 23:20:47.774 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:201 processed and saved successfully.
2025-06-28 23:20:47.774 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the longest river?"
2025-06-28 23:20:47.774 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the longest river?
2025-06-28 23:20:47.774 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the longest river?
2025-06-28 23:20:48.321 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:48.323 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:48.337 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:48.344 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:48.344 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:48.344 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:48.506 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the longest river?, Answer: Nile.

2025-06-28 23:20:48.666 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:48.676 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:48.703 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:48.815 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:48.816 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:48.816 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:48.905 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the longest river?
2025-06-28 23:20:48.905 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:202 processed and saved successfully.
2025-06-28 23:20:48.905 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What color is a ruby?"
2025-06-28 23:20:48.905 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What color is a ruby?
2025-06-28 23:20:48.905 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What color is a ruby?
2025-06-28 23:20:49.352 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:49.356 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:49.385 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:49.392 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:49.392 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:49.392 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:49.604 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What color is a ruby?, Answer: Red

2025-06-28 23:20:50.013 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What color is a ruby?
2025-06-28 23:20:50.014 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:203 processed and saved successfully.
2025-06-28 23:20:50.014 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What sound does a cat make?"
2025-06-28 23:20:50.014 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What sound does a cat make?
2025-06-28 23:20:50.014 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What sound does a cat make?
2025-06-28 23:20:50.419 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:50.422 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:50.440 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:50.448 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:50.448 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:50.449 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:50.609 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What sound does a cat make?, Answer: Meow.

2025-06-28 23:20:50.964 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What sound does a cat make?
2025-06-28 23:20:50.964 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:204 processed and saved successfully.
2025-06-28 23:20:50.964 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What gas do plants produce?"
2025-06-28 23:20:50.964 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What gas do plants produce?
2025-06-28 23:20:50.964 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What gas do plants produce?
2025-06-28 23:20:50.971 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:50.974 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:50.991 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:50.999 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:50.999 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:50.999 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:51.584 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What gas do plants produce?, Answer: Oxygen.

2025-06-28 23:20:51.934 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What gas do plants produce?
2025-06-28 23:20:51.935 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:205 processed and saved successfully.
2025-06-28 23:20:51.935 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 11 squared?"
2025-06-28 23:20:51.936 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 11 squared?
2025-06-28 23:20:51.936 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 11 squared?
2025-06-28 23:20:52.026 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.029 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.048 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:52.065 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the color of emerald?"
2025-06-28 23:20:52.103 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the color of emerald?
2025-06-28 23:20:52.103 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the color of emerald?
2025-06-28 23:20:52.571 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 11 squared?, Answer: 121

2025-06-28 23:20:52.572 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the color of emerald?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.573 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.599 [qna-listener2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for level1-retry-0@33
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, com.kafka.consumer.entity.QnA>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:490)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 10 common frames omitted
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.618 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has four equal sides?"
2025-06-28 23:20:52.620 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:52.620 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:52.707 [Thread-38] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.838 [Thread-42] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.888 [Thread-39] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.888 [Thread-25] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.890 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 11 squared?
2025-06-28 23:20:52.890 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:206 processed and saved successfully.
2025-06-28 23:20:52.890 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a triangle?"
2025-06-28 23:20:52.890 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a triangle?
2025-06-28 23:20:52.890 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a triangle?
2025-06-28 23:20:52.921 [Thread-29] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.921 [Thread-28] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:52.928 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What shape has four equal sides?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.929 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:52.951 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:53.002 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.003 [Thread-24] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.019 [Thread-32] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.074 [Thread-33] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.089 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has four equal sides?"
2025-06-28 23:20:53.089 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:53.090 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:53.137 [Thread-36] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.286 [Thread-40] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.317 [Thread-37] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.339 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.355 [Thread-27] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.426 [Thread-41] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.424 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What shape has four equal sides?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:53.426 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:53.447 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:53.577 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is a triangle?, Answer: A three-sided polygon.

2025-06-28 23:20:53.698 [Thread-30] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.811 [Thread-34] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.817 [Thread-26] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.826 [Thread-31] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.833 [Thread-35] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.833 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:20:53.958 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a triangle?
2025-06-28 23:20:53.958 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:207 processed and saved successfully.
2025-06-28 23:20:53.958 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the currency of the USA?"
2025-06-28 23:20:53.958 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the currency of the USA?
2025-06-28 23:20:53.958 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the currency of the USA?
2025-06-28 23:20:54.149 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has four equal sides?"
2025-06-28 23:20:54.149 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:54.149 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:54.459 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What shape has four equal sides?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:54.461 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:54.485 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:54.747 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has four equal sides?"
2025-06-28 23:20:54.747 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:54.747 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:54.778 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the currency of the USA?, Answer: US Dollar.

2025-06-28 23:20:55.074 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What shape has four equal sides?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:55.077 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:55.092 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:55.115 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the currency of the USA?
2025-06-28 23:20:55.115 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:208 processed and saved successfully.
2025-06-28 23:20:55.115 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is heavier: iron or cotton?"
2025-06-28 23:20:55.115 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is heavier: iron or cotton?
2025-06-28 23:20:55.115 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is heavier: iron or cotton?
2025-06-28 23:20:55.233 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What shape has four equal sides?"
2025-06-28 23:20:55.235 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What shape has four equal sides?
2025-06-28 23:20:55.235 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What shape has four equal sides?
2025-06-28 23:20:55.693 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is heavier: iron or cotton?, Answer: Iron.

2025-06-28 23:20:55.862 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What shape has four equal sides?, Answer: Square.

2025-06-28 23:20:56.041 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is heavier: iron or cotton?
2025-06-28 23:20:56.041 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:209 processed and saved successfully.
2025-06-28 23:20:56.041 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of fast?"
2025-06-28 23:20:56.042 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of fast?
2025-06-28 23:20:56.042 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of fast?
2025-06-28 23:20:56.218 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What shape has four equal sides?
2025-06-28 23:20:56.218 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:190 processed and saved successfully.
2025-06-28 23:20:56.218 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a group of lions called?"
2025-06-28 23:20:56.218 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a group of lions called?
2025-06-28 23:20:56.218 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a group of lions called?
2025-06-28 23:20:56.566 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is a group of lions called?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:56.569 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:56.604 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the opposite of fast?, Answer: Slow.

2025-06-28 23:20:56.608 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:56.615 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a group of lions called?"
2025-06-28 23:20:56.616 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a group of lions called?
2025-06-28 23:20:56.616 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a group of lions called?
2025-06-28 23:20:56.930 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of fast?
2025-06-28 23:20:56.930 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:210 processed and saved successfully.
2025-06-28 23:20:56.933 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many colors in a rainbow?"
2025-06-28 23:20:56.933 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many colors in a rainbow?
2025-06-28 23:20:56.933 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many colors in a rainbow?
2025-06-28 23:20:57.189 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is a group of lions called?, Answer: A pride.

2025-06-28 23:20:57.234 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 6 seconds
2025-06-28 23:20:57.234 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many colors in a rainbow?
2025-06-28 23:20:57.234 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:57.235 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 6 seconds...
2025-06-28 23:20:57.236 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:57.236 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What does a thermometer measure?"
2025-06-28 23:20:57.236 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What does a thermometer measure?
2025-06-28 23:20:57.236 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What does a thermometer measure?
2025-06-28 23:20:57.242 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:211, Question: How many colors in a rainbow?, Offset: 38
2025-06-28 23:20:57.519 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a group of lions called?
2025-06-28 23:20:57.519 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:191 processed and saved successfully.
2025-06-28 23:20:57.519 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the national animal of USA?"
2025-06-28 23:20:57.519 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the national animal of USA?
2025-06-28 23:20:57.519 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the national animal of USA?
2025-06-28 23:20:57.533 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 5 seconds
2025-06-28 23:20:57.535 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What does a thermometer measure?
2025-06-28 23:20:57.535 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:57.535 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 5 seconds...
2025-06-28 23:20:57.536 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:57.536 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 20% of 100?"
2025-06-28 23:20:57.537 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 20% of 100?
2025-06-28 23:20:57.537 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 20% of 100?
2025-06-28 23:20:57.539 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:212, Question: What does a thermometer measure?, Offset: 39
2025-06-28 23:20:57.849 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 5 seconds
2025-06-28 23:20:57.856 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 20% of 100?
2025-06-28 23:20:57.856 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:57.858 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 5 seconds...
2025-06-28 23:20:57.858 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:57.858 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which planet is blue?"
2025-06-28 23:20:57.858 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet is blue?
2025-06-28 23:20:57.858 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which planet is blue?
2025-06-28 23:20:57.914 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:213, Question: What is 20% of 100?, Offset: 40
2025-06-28 23:20:58.209 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 5 seconds
2025-06-28 23:20:58.222 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Which planet is blue?
2025-06-28 23:20:58.222 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:58.224 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 5 seconds...
2025-06-28 23:20:58.225 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:58.226 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the main ingredient in bread?"
2025-06-28 23:20:58.226 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the main ingredient in bread?
2025-06-28 23:20:58.226 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the main ingredient in bread?
2025-06-28 23:20:58.264 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:214, Question: Which planet is blue?, Offset: 41
2025-06-28 23:20:58.288 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the national animal of USA?, Answer: The bald eagle.

2025-06-28 23:20:58.562 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 4 seconds
2025-06-28 23:20:58.563 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the main ingredient in bread?
2025-06-28 23:20:58.563 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:58.565 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 4 seconds...
2025-06-28 23:20:58.565 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:58.565 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many bones in the human body?"
2025-06-28 23:20:58.565 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many bones in the human body?
2025-06-28 23:20:58.565 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many bones in the human body?
2025-06-28 23:20:58.581 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:215, Question: What is the main ingredient in bread?, Offset: 42
2025-06-28 23:20:58.622 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the national animal of USA?
2025-06-28 23:20:58.622 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:192 processed and saved successfully.
2025-06-28 23:20:58.622 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many seconds in a minute?"
2025-06-28 23:20:58.622 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many seconds in a minute?
2025-06-28 23:20:58.622 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many seconds in a minute?
2025-06-28 23:20:58.906 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 4 seconds
2025-06-28 23:20:58.918 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many bones in the human body?
2025-06-28 23:20:58.919 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:58.921 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 4 seconds...
2025-06-28 23:20:58.921 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:58.925 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a group of wolves called?"
2025-06-28 23:20:58.928 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a group of wolves called?
2025-06-28 23:20:58.928 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a group of wolves called?
2025-06-28 23:20:58.936 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: How many seconds in a minute?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:58.938 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:20:59.043 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:216, Question: How many bones in the human body?, Offset: 43
2025-06-28 23:20:59.103 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:20:59.273 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many seconds in a minute?"
2025-06-28 23:20:59.274 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many seconds in a minute?
2025-06-28 23:20:59.274 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many seconds in a minute?
2025-06-28 23:20:59.313 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 4 seconds
2025-06-28 23:20:59.315 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is a group of wolves called?
2025-06-28 23:20:59.315 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:59.315 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 4 seconds...
2025-06-28 23:20:59.315 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:59.315 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a young sheep called?"
2025-06-28 23:20:59.315 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a young sheep called?
2025-06-28 23:20:59.315 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a young sheep called?
2025-06-28 23:20:59.367 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:217, Question: What is a group of wolves called?, Offset: 44
2025-06-28 23:20:59.683 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 3 seconds
2025-06-28 23:20:59.684 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is a young sheep called?
2025-06-28 23:20:59.684 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:20:59.685 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 3 seconds...
2025-06-28 23:20:59.686 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:20:59.686 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is Earth's natural satellite?"
2025-06-28 23:20:59.686 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is Earth's natural satellite?
2025-06-28 23:20:59.686 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is Earth's natural satellite?
2025-06-28 23:20:59.877 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:218, Question: What is a young sheep called?, Offset: 45
2025-06-28 23:20:59.956 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many seconds in a minute?, Answer: 60

2025-06-28 23:21:00.024 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 3 seconds
2025-06-28 23:21:00.026 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is Earth's natural satellite?
2025-06-28 23:21:00.026 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:00.026 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 3 seconds...
2025-06-28 23:21:00.026 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:00.026 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the name for a three-legged stand?"
2025-06-28 23:21:00.028 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the name for a three-legged stand?
2025-06-28 23:21:00.028 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the name for a three-legged stand?
2025-06-28 23:21:00.277 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:219, Question: What is Earth's natural satellite?, Offset: 46
2025-06-28 23:21:00.397 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many seconds in a minute?
2025-06-28 23:21:00.397 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:193 processed and saved successfully.
2025-06-28 23:21:00.398 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many colors in a rainbow?"
2025-06-28 23:21:00.398 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many colors in a rainbow?
2025-06-28 23:21:00.398 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many colors in a rainbow?
2025-06-28 23:21:00.399 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 3 seconds
2025-06-28 23:21:00.400 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the name for a three-legged stand?
2025-06-28 23:21:00.400 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:00.400 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 3 seconds...
2025-06-28 23:21:00.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:00.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 50 + 50?"
2025-06-28 23:21:00.402 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 50 + 50?
2025-06-28 23:21:00.402 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 50 + 50?
2025-06-28 23:21:00.659 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:220, Question: What is the name for a three-legged stand?, Offset: 47
2025-06-28 23:21:00.765 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 2 seconds
2025-06-28 23:21:00.766 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 50 + 50?
2025-06-28 23:21:00.767 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:00.768 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 2 seconds...
2025-06-28 23:21:00.768 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:00.768 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which bird can mimic humans?"
2025-06-28 23:21:00.768 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which bird can mimic humans?
2025-06-28 23:21:00.768 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which bird can mimic humans?
2025-06-28 23:21:01.050 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many colors in a rainbow?, Answer: Seven.

2025-06-28 23:21:01.266 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:221, Question: What is 50 + 50?, Offset: 48
2025-06-28 23:21:01.326 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 2 seconds
2025-06-28 23:21:01.330 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Which bird can mimic humans?
2025-06-28 23:21:01.330 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:01.330 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 2 seconds...
2025-06-28 23:21:01.330 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:01.332 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What’s the capital of China?"
2025-06-28 23:21:01.332 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of China?
2025-06-28 23:21:01.332 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What’s the capital of China?
2025-06-28 23:21:01.438 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:222, Question: Which bird can mimic humans?, Offset: 49
2025-06-28 23:21:01.569 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many colors in a rainbow?
2025-06-28 23:21:01.570 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:211 processed and saved successfully.
2025-06-28 23:21:01.570 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What does a thermometer measure?"
2025-06-28 23:21:01.570 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What does a thermometer measure?
2025-06-28 23:21:01.570 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What does a thermometer measure?
2025-06-28 23:21:01.763 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 1 seconds
2025-06-28 23:21:01.793 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What’s the capital of China?
2025-06-28 23:21:01.793 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:01.794 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 1 seconds...
2025-06-28 23:21:01.794 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:01.796 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What do cows drink?"
2025-06-28 23:21:01.796 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What do cows drink?
2025-06-28 23:21:01.796 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What do cows drink?
2025-06-28 23:21:02.119 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What does a thermometer measure?, Answer: Temperature.

2025-06-28 23:21:02.148 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 1 seconds
2025-06-28 23:21:02.150 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What do cows drink?
2025-06-28 23:21:02.150 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:02.164 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 1 seconds...
2025-06-28 23:21:02.164 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:02.330 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What organ helps us breathe?"
2025-06-28 23:21:02.330 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What organ helps us breathe?
2025-06-28 23:21:02.330 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What organ helps us breathe?
2025-06-28 23:21:02.334 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:223, Question: What’s the capital of China?, Offset: 50
2025-06-28 23:21:02.461 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:224, Question: What do cows drink?, Offset: 51
2025-06-28 23:21:02.525 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What does a thermometer measure?
2025-06-28 23:21:02.526 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:212 processed and saved successfully.
2025-06-28 23:21:02.526 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 20% of 100?"
2025-06-28 23:21:02.526 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 20% of 100?
2025-06-28 23:21:02.526 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 20% of 100?
2025-06-28 23:21:02.717 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 0 seconds
2025-06-28 23:21:02.723 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What organ helps us breathe?
2025-06-28 23:21:02.725 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:02.727 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 0 seconds...
2025-06-28 23:21:02.727 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:02.727 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is an antonym of happy?"
2025-06-28 23:21:02.727 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is an antonym of happy?
2025-06-28 23:21:02.727 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is an antonym of happy?
2025-06-28 23:21:02.828 [Thread-47] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.828 [Thread-47] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:02.828 [Thread-44] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.830 [Thread-44] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:02.835 [Thread-57] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.835 [Thread-57] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:02.841 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:225, Question: What organ helps us breathe?, Offset: 52
2025-06-28 23:21:02.904 [Thread-53] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.904 [Thread-53] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:02.915 [Thread-55] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.915 [Thread-55] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:02.959 [Thread-50] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:02.960 [Thread-50] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.144 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 20% of 100?, Answer: 20

2025-06-28 23:21:03.155 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 0 seconds
2025-06-28 23:21:03.159 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is an antonym of happy?
2025-06-28 23:21:03.159 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:03.161 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 0 seconds...
2025-06-28 23:21:03.161 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:03.161 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the hardest natural substance?"
2025-06-28 23:21:03.161 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the hardest natural substance?
2025-06-28 23:21:03.164 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the hardest natural substance?
2025-06-28 23:21:03.277 [Thread-38] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.278 [Thread-45] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.307 [Thread-38] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.307 [Thread-45] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.391 [Thread-51] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.391 [Thread-51] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.392 [Thread-48] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.392 [Thread-48] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.464 [Thread-58] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.465 [Thread-58] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.505 [Thread-43] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.505 [Thread-43] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.506 [Thread-46] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.507 [Thread-29] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.507 [Thread-46] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.507 [Thread-29] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.507 [Thread-25] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.509 [Thread-25] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.509 [Thread-42] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.509 [Thread-42] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.513 [Thread-39] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.515 [Thread-39] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.515 [Thread-28] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.515 [Thread-28] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.516 [Thread-32] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.516 [Thread-32] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.516 [Thread-36] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.516 [Thread-36] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.516 [Thread-33] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.516 [Thread-33] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.518 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 20% of 100?
2025-06-28 23:21:03.518 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:213 processed and saved successfully.
2025-06-28 23:21:03.518 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Which planet is blue?"
2025-06-28 23:21:03.518 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet is blue?
2025-06-28 23:21:03.518 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Which planet is blue?
2025-06-28 23:21:03.521 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.521 [Thread-21] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.521 [Thread-24] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.521 [Thread-24] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.522 [Thread-49] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.522 [Thread-49] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.526 [Thread-54] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.526 [Thread-54] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.526 [Thread-40] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.526 [Thread-40] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.563 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:226, Question: What is an antonym of happy?, Offset: 53
2025-06-28 23:21:03.566 [Thread-56] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.566 [Thread-56] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.622 [Thread-27] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.623 [Thread-27] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.624 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.625 [Thread-22] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.625 [Thread-37] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.625 [Thread-37] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.630 [Thread-52] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.630 [Thread-52] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.641 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 59 seconds
2025-06-28 23:21:03.642 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the hardest natural substance?
2025-06-28 23:21:03.642 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:03.642 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 59 seconds...
2025-06-28 23:21:03.642 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:03.643 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which metal is liquid at room temp?"
2025-06-28 23:21:03.644 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which metal is liquid at room temp?
2025-06-28 23:21:03.644 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which metal is liquid at room temp?
2025-06-28 23:21:03.719 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:227, Question: What is the hardest natural substance?, Offset: 54
2025-06-28 23:21:03.774 [Thread-30] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.774 [Thread-30] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.887 [Thread-41] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:03.887 [Thread-41] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:03.986 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 59 seconds
2025-06-28 23:21:04.011 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Which metal is liquid at room temp?
2025-06-28 23:21:04.011 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:04.014 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 59 seconds...
2025-06-28 23:21:04.014 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:04.014 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of South Korea?"
2025-06-28 23:21:04.014 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of South Korea?
2025-06-28 23:21:04.014 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of South Korea?
2025-06-28 23:21:04.053 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:228, Question: Which metal is liquid at room temp?, Offset: 55
2025-06-28 23:21:04.299 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Which planet is blue?, Answer: Neptune.

2025-06-28 23:21:04.414 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 59 seconds
2025-06-28 23:21:04.427 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the capital of South Korea?
2025-06-28 23:21:04.428 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:04.429 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 59 seconds...
2025-06-28 23:21:04.429 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:04.430 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 7 factorial?"
2025-06-28 23:21:04.430 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 7 factorial?
2025-06-28 23:21:04.430 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 7 factorial?
2025-06-28 23:21:04.453 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:04.453 [Thread-23] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:04.453 [Thread-34] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:04.453 [Thread-34] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:04.455 [Thread-26] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:04.455 [Thread-26] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:04.455 [Thread-31] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:04.456 [Thread-31] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:04.456 [Thread-35] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:21:04.456 [Thread-35] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:21:04.706 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which planet is blue?
2025-06-28 23:21:04.706 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:214 processed and saved successfully.
2025-06-28 23:21:04.709 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the main ingredient in bread?"
2025-06-28 23:21:04.709 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the main ingredient in bread?
2025-06-28 23:21:04.709 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the main ingredient in bread?
2025-06-28 23:21:04.826 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 58 seconds
2025-06-28 23:21:04.844 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 7 factorial?
2025-06-28 23:21:04.844 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:04.846 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 58 seconds...
2025-06-28 23:21:04.846 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:04.846 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the chemical symbol for iron?"
2025-06-28 23:21:04.846 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for iron?
2025-06-28 23:21:04.846 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the chemical symbol for iron?
2025-06-28 23:21:04.984 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:229, Question: What is the capital of South Korea?, Offset: 56
2025-06-28 23:21:04.985 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:230, Question: What is 7 factorial?, Offset: 57
2025-06-28 23:21:05.305 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 58 seconds
2025-06-28 23:21:05.305 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the chemical symbol for iron?
2025-06-28 23:21:05.307 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:05.307 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 58 seconds...
2025-06-28 23:21:05.307 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:05.311 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many degrees in a right angle?"
2025-06-28 23:21:05.311 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many degrees in a right angle?
2025-06-28 23:21:05.311 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many degrees in a right angle?
2025-06-28 23:21:05.337 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:231, Question: What is the chemical symbol for iron?, Offset: 58
2025-06-28 23:21:05.392 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the main ingredient in bread?, Answer: Flour.

2025-06-28 23:21:05.674 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 57 seconds
2025-06-28 23:21:05.675 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many degrees in a right angle?
2025-06-28 23:21:05.675 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:05.675 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 57 seconds...
2025-06-28 23:21:05.675 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:05.684 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of clean?"
2025-06-28 23:21:05.684 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of clean?
2025-06-28 23:21:05.684 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of clean?
2025-06-28 23:21:05.760 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:232, Question: How many degrees in a right angle?, Offset: 59
2025-06-28 23:21:05.819 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the main ingredient in bread?
2025-06-28 23:21:05.821 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:215 processed and saved successfully.
2025-06-28 23:21:05.821 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many bones in the human body?"
2025-06-28 23:21:05.821 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many bones in the human body?
2025-06-28 23:21:05.821 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many bones in the human body?
2025-06-28 23:21:06.076 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 57 seconds
2025-06-28 23:21:06.077 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the opposite of clean?
2025-06-28 23:21:06.077 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:06.078 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 57 seconds...
2025-06-28 23:21:06.078 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:06.078 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What’s the capital of Mexico?"
2025-06-28 23:21:06.078 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Mexico?
2025-06-28 23:21:06.078 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What’s the capital of Mexico?
2025-06-28 23:21:06.102 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:233, Question: What is the opposite of clean?, Offset: 60
2025-06-28 23:21:06.397 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 57 seconds
2025-06-28 23:21:06.399 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What’s the capital of Mexico?
2025-06-28 23:21:06.399 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:06.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 57 seconds...
2025-06-28 23:21:06.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:06.401 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the smallest bone in the body?"
2025-06-28 23:21:06.402 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the smallest bone in the body?
2025-06-28 23:21:06.402 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the smallest bone in the body?
2025-06-28 23:21:06.404 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many bones in the human body?, Answer: 206

2025-06-28 23:21:06.460 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:234, Question: What’s the capital of Mexico?, Offset: 61
2025-06-28 23:21:06.769 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many bones in the human body?
2025-06-28 23:21:06.769 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:216 processed and saved successfully.
2025-06-28 23:21:06.776 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 56 seconds
2025-06-28 23:21:06.778 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the smallest bone in the body?
2025-06-28 23:21:06.778 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:06.780 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 56 seconds...
2025-06-28 23:21:06.780 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:06.780 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What part of the body helps you see?"
2025-06-28 23:21:06.780 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What part of the body helps you see?
2025-06-28 23:21:06.780 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What part of the body helps you see?
2025-06-28 23:21:06.990 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:235, Question: What is the smallest bone in the body?, Offset: 62
2025-06-28 23:21:07.632 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a group of wolves called?"
2025-06-28 23:21:07.633 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a group of wolves called?
2025-06-28 23:21:07.633 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a group of wolves called?
2025-06-28 23:21:07.986 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 55 seconds
2025-06-28 23:21:07.987 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What part of the body helps you see?
2025-06-28 23:21:07.987 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:07.988 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 55 seconds...
2025-06-28 23:21:07.989 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:08.020 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 2 to the power of 5?"
2025-06-28 23:21:08.020 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 2 to the power of 5?
2025-06-28 23:21:08.020 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 2 to the power of 5?
2025-06-28 23:21:08.039 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:236, Question: What part of the body helps you see?, Offset: 63
2025-06-28 23:21:08.330 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 55 seconds
2025-06-28 23:21:08.336 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is 2 to the power of 5?
2025-06-28 23:21:08.336 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:08.338 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 55 seconds...
2025-06-28 23:21:08.338 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:08.338 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many planets in the solar system?"
2025-06-28 23:21:08.362 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many planets in the solar system?
2025-06-28 23:21:08.362 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many planets in the solar system?
2025-06-28 23:21:08.388 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is a group of wolves called?, Answer: A pack.

2025-06-28 23:21:08.397 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:237, Question: What is 2 to the power of 5?, Offset: 64
2025-06-28 23:21:08.697 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 54 seconds
2025-06-28 23:21:08.724 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: How many planets in the solar system?
2025-06-28 23:21:08.724 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:08.725 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 54 seconds...
2025-06-28 23:21:08.725 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:08.726 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the main gas in Earth’s atmosphere?"
2025-06-28 23:21:08.727 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:21:08.727 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:21:08.794 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a group of wolves called?
2025-06-28 23:21:08.794 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:217 processed and saved successfully.
2025-06-28 23:21:09.270 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 54 seconds
2025-06-28 23:21:09.271 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:21:09.271 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:09.271 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 54 seconds...
2025-06-28 23:21:09.272 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:09.272 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which bird lays the largest eggs?"
2025-06-28 23:21:09.272 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which bird lays the largest eggs?
2025-06-28 23:21:09.272 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which bird lays the largest eggs?
2025-06-28 23:21:09.458 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:238, Question: How many planets in the solar system?, Offset: 65
2025-06-28 23:21:09.461 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:239, Question: What is the main gas in Earth’s atmosphere?, Offset: 66
2025-06-28 23:21:09.669 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 53 seconds
2025-06-28 23:21:09.669 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: Which bird lays the largest eggs?
2025-06-28 23:21:09.669 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:09.669 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 53 seconds...
2025-06-28 23:21:09.669 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:09.669 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What planet is known for its rings?"
2025-06-28 23:21:09.671 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet is known for its rings?
2025-06-28 23:21:09.671 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What planet is known for its rings?
2025-06-28 23:21:09.762 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:240, Question: Which bird lays the largest eggs?, Offset: 67
2025-06-28 23:21:09.975 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 53 seconds
2025-06-28 23:21:09.975 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What planet is known for its rings?
2025-06-28 23:21:09.975 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:09.977 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 53 seconds...
2025-06-28 23:21:09.977 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:09.977 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the lightest element?"
2025-06-28 23:21:09.977 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the lightest element?
2025-06-28 23:21:09.978 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the lightest element?
2025-06-28 23:21:10.000 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:241, Question: What planet is known for its rings?, Offset: 68
2025-06-28 23:21:10.304 [reactor-http-nio-3] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 53 seconds
2025-06-28 23:21:10.409 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the lightest element?
2025-06-28 23:21:10.409 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:10.409 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 53 seconds...
2025-06-28 23:21:10.411 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:10.411 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the largest desert?"
2025-06-28 23:21:10.411 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the largest desert?
2025-06-28 23:21:10.411 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the largest desert?
2025-06-28 23:21:10.463 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:242, Question: What is the lightest element?, Offset: 69
2025-06-28 23:21:10.775 [reactor-http-nio-2] WARN  c.k.consumer.service.GeminiService - Rate limit response received. Retry after: 52 seconds
2025-06-28 23:21:10.779 [qna-listener-0-C-1] ERROR c.k.consumer.service.GeminiService - Gemini rate-limited request for question: What is the largest desert?
2025-06-28 23:21:10.781 [qna-listener-0-C-1] WARN  c.k.c.service.KafkaMessageListener - Rate limit hit: Rate limit exceeded
2025-06-28 23:21:10.785 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Pausing consumer for 52 seconds...
2025-06-28 23:21:10.785 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer paused.
2025-06-28 23:21:10.965 [kafka-producer-network-thread | consumer-producer-1] INFO  c.k.c.service.KafkaMessageListener - Message sent to retry topic. Id:243, Question: What is the largest desert?, Offset: 70
2025-06-28 23:21:12.912 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:12.982 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.104 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.125 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.191 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.344 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.344 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.344 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.344 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.347 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.354 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.551 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.551 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.551 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:13.551 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:14.050 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:14.231 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 50 seconds
2025-06-28 23:21:14.897 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:21:16.336 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:23.661 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.484 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.490 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:24.492 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:25.509 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 40 seconds
2025-06-28 23:21:28.724 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:33.743 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:34.479 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:34.583 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:21:35.228 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:35.230 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.259 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.265 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.265 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.265 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.267 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:36.265 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 30 seconds
2025-06-28 23:21:39.854 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:40.189 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:21:43.813 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.302 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.302 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.302 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.302 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.302 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.335 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.335 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.335 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.335 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.335 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:45.486 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:45.820 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:21:46.341 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:46.341 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:46.341 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:46.344 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:46.344 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:46.365 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 20 seconds
2025-06-28 23:21:51.116 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:51.390 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:21:53.893 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.366 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.366 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.366 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.366 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.366 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.381 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.381 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.381 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.381 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:55.381 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.393 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.393 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.393 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.394 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.394 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.463 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Consumer will resume in 10 seconds
2025-06-28 23:21:56.747 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:21:56.966 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:22:02.456 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:22:03.964 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:03.964 [Thread-67] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.453 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.453 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.453 [Thread-64] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.453 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.453 [Thread-68] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.454 [Thread-75] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.454 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.454 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.454 [Thread-72] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.454 [Thread-73] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.456 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.456 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.456 [Thread-60] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.456 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.456 [Thread-70] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.456 [Thread-59] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.456 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.456 [Thread-62] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:05.456 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:05.456 [Thread-65] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.453 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.454 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.454 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.454 [Thread-63] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.454 [Thread-66] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.454 [Thread-69] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.469 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.469 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.469 [Thread-71] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.470 [Thread-61] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:06.548 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Resuming Kafka consumer now.
2025-06-28 23:22:06.548 [Thread-74] INFO  c.k.c.service.KafkaMessageListener - Kafka consumer resumed.
2025-06-28 23:22:07.924 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 45: The coordinator is not available.
2025-06-28 23:22:08.018 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:22:08.801 [qna-listener2-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.common.errors.TimeoutException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:198)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1992)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1387)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {level1-retry-0=OffsetAndMetadata{offset=45, leaderEpoch=null, metadata=''}}
2025-06-28 23:22:08.808 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is a young sheep called?"
2025-06-28 23:22:08.808 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a young sheep called?
2025-06-28 23:22:08.808 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is a young sheep called?
2025-06-28 23:22:09.675 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is a young sheep called?, Answer: Lamb.

2025-06-28 23:22:10.053 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a young sheep called?
2025-06-28 23:22:10.053 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:218 processed and saved successfully.
2025-06-28 23:22:10.054 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is Earth's natural satellite?"
2025-06-28 23:22:10.054 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is Earth's natural satellite?
2025-06-28 23:22:10.054 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is Earth's natural satellite?
2025-06-28 23:22:10.686 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is Earth's natural satellite?, Answer: The Moon.

2025-06-28 23:22:10.790 [qna-listener-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.common.errors.TimeoutException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:198)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1992)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1387)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {practice5-0=OffsetAndMetadata{offset=242, leaderEpoch=null, metadata=''}}
2025-06-28 23:22:10.797 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is 9 squared?"
2025-06-28 23:22:10.797 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 9 squared?
2025-06-28 23:22:10.797 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is 9 squared?
2025-06-28 23:22:11.044 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is Earth's natural satellite?
2025-06-28 23:22:11.044 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:219 processed and saved successfully.
2025-06-28 23:22:11.044 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the name for a three-legged stand?"
2025-06-28 23:22:11.044 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the name for a three-legged stand?
2025-06-28 23:22:11.044 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the name for a three-legged stand?
2025-06-28 23:22:11.514 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is 9 squared?, Answer: This is not a history question. 9 squared (9 * 9) is 81.

2025-06-28 23:22:11.635 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the name for a three-legged stand?, Answer: A tripod.

2025-06-28 23:22:11.834 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 9 squared?
2025-06-28 23:22:11.834 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:244 processed and saved successfully.
2025-06-28 23:22:11.834 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which planet is known as the evening star?"
2025-06-28 23:22:11.834 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which planet is known as the evening star?
2025-06-28 23:22:11.834 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which planet is known as the evening star?
2025-06-28 23:22:12.046 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the name for a three-legged stand?
2025-06-28 23:22:12.046 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:220 processed and saved successfully.
2025-06-28 23:22:12.046 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 50 + 50?"
2025-06-28 23:22:12.046 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 50 + 50?
2025-06-28 23:22:12.046 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 50 + 50?
2025-06-28 23:22:12.637 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which planet is known as the evening star?, Answer: Venus.

2025-06-28 23:22:12.694 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 50 + 50?, Answer: One hundred.

2025-06-28 23:22:12.943 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which planet is known as the evening star?
2025-06-28 23:22:12.943 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:245 processed and saved successfully.
2025-06-28 23:22:12.943 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the study of life called?"
2025-06-28 23:22:12.943 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the study of life called?
2025-06-28 23:22:12.943 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the study of life called?
2025-06-28 23:22:13.034 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 50 + 50?
2025-06-28 23:22:13.040 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:221 processed and saved successfully.
2025-06-28 23:22:13.040 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Which bird can mimic humans?"
2025-06-28 23:22:13.040 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which bird can mimic humans?
2025-06-28 23:22:13.040 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Which bird can mimic humans?
2025-06-28 23:22:13.557 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the study of life called?, Answer: Biology.

2025-06-28 23:22:13.661 [kafka-coordinator-heartbeat-thread | qna-consumer-group-auto] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 242: The coordinator is not available.
2025-06-28 23:22:13.664 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Which bird can mimic humans?, Answer: Parrots.

2025-06-28 23:22:13.898 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the study of life called?
2025-06-28 23:22:13.898 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:246 processed and saved successfully.
2025-06-28 23:22:13.898 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "Which gas is used in balloons?"
2025-06-28 23:22:13.898 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which gas is used in balloons?
2025-06-28 23:22:13.898 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: Which gas is used in balloons?
2025-06-28 23:22:14.064 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which bird can mimic humans?
2025-06-28 23:22:14.065 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:222 processed and saved successfully.
2025-06-28 23:22:14.065 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What’s the capital of China?"
2025-06-28 23:22:14.065 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of China?
2025-06-28 23:22:14.065 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What’s the capital of China?
2025-06-28 23:22:14.547 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: Which gas is used in balloons?, Answer: Helium

2025-06-28 23:22:14.654 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What’s the capital of China?, Answer: Beijing.

2025-06-28 23:22:14.917 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which gas is used in balloons?
2025-06-28 23:22:14.917 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:247 processed and saved successfully.
2025-06-28 23:22:14.917 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the capital of the UK?"
2025-06-28 23:22:14.917 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of the UK?
2025-06-28 23:22:14.917 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the capital of the UK?
2025-06-28 23:22:15.044 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What’s the capital of China?
2025-06-28 23:22:15.044 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:223 processed and saved successfully.
2025-06-28 23:22:15.044 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What do cows drink?"
2025-06-28 23:22:15.044 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What do cows drink?
2025-06-28 23:22:15.044 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What do cows drink?
2025-06-28 23:22:15.614 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What do cows drink?, Answer: Water.

2025-06-28 23:22:15.616 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the capital of the UK?, Answer: London.

2025-06-28 23:22:15.965 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of the UK?
2025-06-28 23:22:15.965 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:248 processed and saved successfully.
2025-06-28 23:22:15.965 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the opposite of up?"
2025-06-28 23:22:15.965 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of up?
2025-06-28 23:22:15.965 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the opposite of up?
2025-06-28 23:22:15.965 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What do cows drink?
2025-06-28 23:22:15.965 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:224 processed and saved successfully.
2025-06-28 23:22:15.965 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What organ helps us breathe?"
2025-06-28 23:22:15.965 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What organ helps us breathe?
2025-06-28 23:22:15.965 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What organ helps us breathe?
2025-06-28 23:22:16.656 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What organ helps us breathe?, Answer: Lungs.

2025-06-28 23:22:16.728 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the opposite of up?, Answer: Down.

2025-06-28 23:22:17.012 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What organ helps us breathe?
2025-06-28 23:22:17.012 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:225 processed and saved successfully.
2025-06-28 23:22:17.012 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is an antonym of happy?"
2025-06-28 23:22:17.012 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is an antonym of happy?
2025-06-28 23:22:17.012 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is an antonym of happy?
2025-06-28 23:22:17.055 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of up?
2025-06-28 23:22:17.055 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:249 processed and saved successfully.
2025-06-28 23:22:17.055 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What color are strawberries?"
2025-06-28 23:22:17.055 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What color are strawberries?
2025-06-28 23:22:17.055 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What color are strawberries?
2025-06-28 23:22:17.763 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is an antonym of happy?, Answer: Sad.

2025-06-28 23:22:17.763 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What color are strawberries?, Answer: Red.

2025-06-28 23:22:18.077 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What color are strawberries?
2025-06-28 23:22:18.083 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:250 processed and saved successfully.
2025-06-28 23:22:18.083 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What does a botanist study?"
2025-06-28 23:22:18.083 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What does a botanist study?
2025-06-28 23:22:18.083 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What does a botanist study?
2025-06-28 23:22:18.144 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is an antonym of happy?
2025-06-28 23:22:18.144 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:226 processed and saved successfully.
2025-06-28 23:22:18.144 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the hardest natural substance?"
2025-06-28 23:22:18.144 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the hardest natural substance?
2025-06-28 23:22:18.144 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the hardest natural substance?
2025-06-28 23:22:18.704 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What does a botanist study?, Answer: Plants.

2025-06-28 23:22:18.897 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the hardest natural substance?, Answer: Diamond.

2025-06-28 23:22:19.008 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What does a botanist study?
2025-06-28 23:22:19.008 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:251 processed and saved successfully.
2025-06-28 23:22:19.008 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is a baby cat called?"
2025-06-28 23:22:19.008 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is a baby cat called?
2025-06-28 23:22:19.008 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is a baby cat called?
2025-06-28 23:22:19.344 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the hardest natural substance?
2025-06-28 23:22:19.358 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:227 processed and saved successfully.
2025-06-28 23:22:19.358 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Which metal is liquid at room temp?"
2025-06-28 23:22:19.358 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which metal is liquid at room temp?
2025-06-28 23:22:19.358 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Which metal is liquid at room temp?
2025-06-28 23:22:19.675 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is a baby cat called?, Answer: Kitten.

2025-06-28 23:22:19.920 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Which metal is liquid at room temp?, Answer: Mercury

2025-06-28 23:22:20.009 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is a baby cat called?
2025-06-28 23:22:20.009 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:252 processed and saved successfully.
2025-06-28 23:22:20.009 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many minutes in an hour?"
2025-06-28 23:22:20.009 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many minutes in an hour?
2025-06-28 23:22:20.009 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many minutes in an hour?
2025-06-28 23:22:20.309 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which metal is liquid at room temp?
2025-06-28 23:22:20.309 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:228 processed and saved successfully.
2025-06-28 23:22:20.313 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the capital of South Korea?"
2025-06-28 23:22:20.313 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the capital of South Korea?
2025-06-28 23:22:20.313 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the capital of South Korea?
2025-06-28 23:22:20.635 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many minutes in an hour?, Answer: 60

2025-06-28 23:22:20.945 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many minutes in an hour?
2025-06-28 23:22:20.945 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:253 processed and saved successfully.
2025-06-28 23:22:20.945 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the fastest bird?"
2025-06-28 23:22:20.945 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the fastest bird?
2025-06-28 23:22:20.945 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the fastest bird?
2025-06-28 23:22:20.987 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the capital of South Korea?, Answer: Seoul.

2025-06-28 23:22:21.448 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the capital of South Korea?
2025-06-28 23:22:21.448 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:229 processed and saved successfully.
2025-06-28 23:22:21.453 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 7 factorial?"
2025-06-28 23:22:21.453 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 7 factorial?
2025-06-28 23:22:21.453 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 7 factorial?
2025-06-28 23:22:21.655 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the fastest bird?, Answer: The peregrine falcon, in a dive.

2025-06-28 23:22:22.006 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the fastest bird?
2025-06-28 23:22:22.006 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:254 processed and saved successfully.
2025-06-28 23:22:22.006 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "How many meters in a kilometer?"
2025-06-28 23:22:22.006 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many meters in a kilometer?
2025-06-28 23:22:22.006 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: How many meters in a kilometer?
2025-06-28 23:22:22.074 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 7 factorial?, Answer: 5040

2025-06-28 23:22:22.434 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 7 factorial?
2025-06-28 23:22:22.434 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:230 processed and saved successfully.
2025-06-28 23:22:22.434 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the chemical symbol for iron?"
2025-06-28 23:22:22.434 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the chemical symbol for iron?
2025-06-28 23:22:22.434 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the chemical symbol for iron?
2025-06-28 23:22:22.665 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: How many meters in a kilometer?, Answer: 1000

2025-06-28 23:22:22.974 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many meters in a kilometer?
2025-06-28 23:22:22.974 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:255 processed and saved successfully.
2025-06-28 23:22:22.974 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - Received Message: "What is the main language in France?"
2025-06-28 23:22:22.974 [qna-listener-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the main language in France?
2025-06-28 23:22:22.974 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generating answer for question: What is the main language in France?
2025-06-28 23:22:23.074 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the chemical symbol for iron?, Answer: Fe

2025-06-28 23:22:23.464 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the chemical symbol for iron?
2025-06-28 23:22:23.464 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:231 processed and saved successfully.
2025-06-28 23:22:23.464 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many degrees in a right angle?"
2025-06-28 23:22:23.464 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many degrees in a right angle?
2025-06-28 23:22:23.464 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many degrees in a right angle?
2025-06-28 23:22:23.515 [qna-listener-0-C-1] DEBUG c.k.consumer.service.GeminiService - Generated answer for question: What is the main language in France?, Answer: French.

2025-06-28 23:22:23.951 [qna-listener-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the main language in France?
2025-06-28 23:22:23.951 [qna-listener-0-C-1] INFO  c.k.c.service.KafkaMessageListener - QnA with id:256 processed and saved successfully.
2025-06-28 23:22:24.164 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many degrees in a right angle?, Answer: 90

2025-06-28 23:22:24.524 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many degrees in a right angle?
2025-06-28 23:22:24.524 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:232 processed and saved successfully.
2025-06-28 23:22:24.533 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the opposite of clean?"
2025-06-28 23:22:24.533 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of clean?
2025-06-28 23:22:24.533 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the opposite of clean?
2025-06-28 23:22:24.835 [qna-listener2-0-C-1] ERROR c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Gemini API failed for question: What is the opposite of clean?
org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:22:24.835 [qna-listener2-0-C-1] ERROR c.k.c.service.KafkaMessageListener - {Retry topic} Unexpected error during processing: Failed to get response from Gemini
java.lang.RuntimeException: Failed to get response from Gemini
	at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:63)
	at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
	at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$TooManyRequests: 429 Too Many Requests from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 429 TOO_MANY_REQUESTS from POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:330)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:413)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:455)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:509)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:821)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1519)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1377)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1428)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1570)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.kafka.consumer.service.GeminiService2ForRetryTopic.generateAnswer(GeminiService2ForRetryTopic.java:52)
		at com.kafka.consumer.service.ProcessingService.processMessage(ProcessingService.java:35)
		at com.kafka.consumer.service.KafkaMessageListener.consumeFromRetryTopic(KafkaMessageListener.java:77)
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
		at java.base/java.lang.reflect.Method.invoke(Method.java:580)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
		at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
		at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
		at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-28 23:22:30.352 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:22:30.374 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:35.199 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:35.308 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:22:40.230 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:40.349 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:22:45.638 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:45.667 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:22:51.121 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:51.293 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:22:56.751 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:22:56.835 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:02.995 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:23:03.074 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:08.629 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:23:08.709 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:14.164 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:14.165 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:23:19.782 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:19.793 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:23:24.054 [qna-listener-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.common.errors.TimeoutException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:198)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1992)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1387)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {practice5-0=OffsetAndMetadata{offset=255, leaderEpoch=null, metadata=''}}
2025-06-28 23:23:24.847 [qna-listener2-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Failed to commit before handling error
org.apache.kafka.common.errors.TimeoutException: Timeout of 60000ms expired before successfully committing offsets {level1-retry-0=OffsetAndMetadata{offset=60, leaderEpoch=null, metadata=''}}
2025-06-28 23:23:24.864 [qna-listener2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - Record in retry and not yet recovered
2025-06-28 23:23:24.871 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the opposite of clean?"
2025-06-28 23:23:24.871 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the opposite of clean?
2025-06-28 23:23:24.871 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the opposite of clean?
2025-06-28 23:23:25.269 [qna-listener-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-2, groupId=qna-consumer-group-auto] Offset commit failed on partition practice5-0 at offset 255: The coordinator is not available.
2025-06-28 23:23:25.393 [kafka-coordinator-heartbeat-thread | qna-consumer-group-auto] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 60: The coordinator is not available.
2025-06-28 23:23:25.445 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the opposite of clean?, Answer: Dirty.

2025-06-28 23:23:25.775 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the opposite of clean?
2025-06-28 23:23:25.775 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:233 processed and saved successfully.
2025-06-28 23:23:25.775 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What’s the capital of Mexico?"
2025-06-28 23:23:25.775 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What’s the capital of Mexico?
2025-06-28 23:23:25.775 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What’s the capital of Mexico?
2025-06-28 23:23:26.493 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What’s the capital of Mexico?, Answer: Mexico City.

2025-06-28 23:23:26.843 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What’s the capital of Mexico?
2025-06-28 23:23:26.843 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:234 processed and saved successfully.
2025-06-28 23:23:26.844 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the smallest bone in the body?"
2025-06-28 23:23:26.844 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the smallest bone in the body?
2025-06-28 23:23:26.844 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the smallest bone in the body?
2025-06-28 23:23:27.537 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the smallest bone in the body?, Answer: Stapes (in the middle ear).

2025-06-28 23:23:27.848 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the smallest bone in the body?
2025-06-28 23:23:27.848 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:235 processed and saved successfully.
2025-06-28 23:23:27.848 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What part of the body helps you see?"
2025-06-28 23:23:27.848 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What part of the body helps you see?
2025-06-28 23:23:27.848 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What part of the body helps you see?
2025-06-28 23:23:28.594 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What part of the body helps you see?, Answer: Eyes.

2025-06-28 23:23:28.974 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What part of the body helps you see?
2025-06-28 23:23:28.974 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:236 processed and saved successfully.
2025-06-28 23:23:28.974 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is 2 to the power of 5?"
2025-06-28 23:23:28.974 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is 2 to the power of 5?
2025-06-28 23:23:28.974 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is 2 to the power of 5?
2025-06-28 23:23:29.538 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is 2 to the power of 5?, Answer: 32

2025-06-28 23:23:29.897 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is 2 to the power of 5?
2025-06-28 23:23:29.897 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:237 processed and saved successfully.
2025-06-28 23:23:29.897 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "How many planets in the solar system?"
2025-06-28 23:23:29.897 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: How many planets in the solar system?
2025-06-28 23:23:29.897 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: How many planets in the solar system?
2025-06-28 23:23:30.636 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: How many planets in the solar system?, Answer: Eight.

2025-06-28 23:23:31.069 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: How many planets in the solar system?
2025-06-28 23:23:31.069 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:238 processed and saved successfully.
2025-06-28 23:23:31.069 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the main gas in Earth’s atmosphere?"
2025-06-28 23:23:31.069 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:23:31.069 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:23:31.790 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the main gas in Earth’s atmosphere?, Answer: Nitrogen.

2025-06-28 23:23:32.106 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the main gas in Earth’s atmosphere?
2025-06-28 23:23:32.106 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:239 processed and saved successfully.
2025-06-28 23:23:32.106 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "Which bird lays the largest eggs?"
2025-06-28 23:23:32.106 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: Which bird lays the largest eggs?
2025-06-28 23:23:32.106 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: Which bird lays the largest eggs?
2025-06-28 23:23:32.894 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: Which bird lays the largest eggs?, Answer: Ostrich.

2025-06-28 23:23:33.224 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: Which bird lays the largest eggs?
2025-06-28 23:23:33.224 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:240 processed and saved successfully.
2025-06-28 23:23:33.224 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What planet is known for its rings?"
2025-06-28 23:23:33.224 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What planet is known for its rings?
2025-06-28 23:23:33.224 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What planet is known for its rings?
2025-06-28 23:23:33.894 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What planet is known for its rings?, Answer: Saturn.

2025-06-28 23:23:34.297 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What planet is known for its rings?
2025-06-28 23:23:34.297 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:241 processed and saved successfully.
2025-06-28 23:23:34.297 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the lightest element?"
2025-06-28 23:23:34.297 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the lightest element?
2025-06-28 23:23:34.297 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the lightest element?
2025-06-28 23:23:34.924 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the lightest element?, Answer: Hydrogen.

2025-06-28 23:23:35.279 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the lightest element?
2025-06-28 23:23:35.279 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:242 processed and saved successfully.
2025-06-28 23:23:35.279 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - In retry consumer, received Message: "What is the largest desert?"
2025-06-28 23:23:35.279 [qna-listener2-0-C-1] DEBUG c.k.c.service.ProcessingService - Processing question: What is the largest desert?
2025-06-28 23:23:35.279 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generating answer for question: What is the largest desert?
2025-06-28 23:23:35.955 [qna-listener2-0-C-1] DEBUG c.k.c.s.GeminiService2ForRetryTopic - {Retry Service} Generated answer for question: What is the largest desert?, Answer: Antarctic Polar Desert

2025-06-28 23:23:36.294 [qna-listener2-0-C-1] INFO  c.k.c.service.ProcessingService - Successfully processed and saved Q&A. Question: What is the largest desert?
2025-06-28 23:23:36.294 [qna-listener2-0-C-1] INFO  c.k.c.service.KafkaMessageListener - {Retry topic} QnA with id:243 processed and saved successfully.
2025-06-28 23:23:42.013 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:23:46.825 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:23:51.877 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:23:57.389 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:24:02.902 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:24:08.539 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:24:19.984 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:24:20.731 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: partitions revoked: [practice5-0]
2025-06-28 23:24:21.242 [qna-listener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - qna-consumer-group-auto: Consumer stopped
2025-06-28 23:24:25.487 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
2025-06-28 23:24:30.977 [qna-listener2-0-C-1] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-qna-consumer-group-auto-1, groupId=qna-consumer-group-auto] Offset commit failed on partition level1-retry-0 at offset 71: The coordinator is not available.
